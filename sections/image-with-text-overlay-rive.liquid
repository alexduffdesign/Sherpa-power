{%- unless section.settings.full_width -%}
  {%- render 'section-spacing-collapsing' -%}
{%- endunless -%}

<style>
  #shopify-section-{{ section.id }} {
    {%- if section.settings.full_width -%}
      --section-outer-spacing-block: 0;
    {%- endif -%}

    --content-over-media-overlay: {{ section.settings.overlay_color.rgb }} / {{ section.settings.overlay_opacity | divided_by: 100.0 }};

    {%- if section.settings.allow_transparent_header -%}
      margin-block-start: calc(-1 * var(--header-height) * var(--section-is-first));
    {%- endif -%}
  }

  /* Overlay screen fade-in */
  #shopify-section-{{ section.id }} .overlay-screen {
    opacity: 0;
    animation: overlay-screen-on-{{ section.id }} 400ms ease-in-out 1.5s forwards;
  }

  @keyframes overlay-screen-on-{{ section.id }} {
    from { opacity: 0; }
    to { opacity: 1; }
  }

  @media (prefers-reduced-motion: reduce) {
    #shopify-section-{{ section.id }} .overlay-screen {
      animation: none;
      opacity: 1;
    }
  }

  /* Ensure overlay scrim and text remain above decorative layers */
  #shopify-section-{{ section.id }} .content-over-media:before { z-index: 2; }
  #shopify-section-{{ section.id }} .content-over-media > :not(img, video, iframe, svg, video-media, rive-media) { z-index: 3; }

  /* Rive layer positioning */
  #shopify-section-{{ section.id }} .rive-layer {
    max-width: 100%;
    height: 100%;
    position: absolute;
    inset: 0;
    pointer-events: none;
    overflow: hidden;
  }

  #shopify-section-{{ section.id }} .rive-layer rive-media {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    display: block;
  }

  @media (prefers-reduced-motion: reduce) {
    #shopify-section-{{ section.id }} .rive-layer rive-media[playing] {
      /* Pause when reduced motion requested */
      animation: none;
    }
  }
</style>

<div {% render 'section-properties' %} {% if section.settings.allow_transparent_header %}allow-transparent-header{% endif %} data-section-type="image-with-text-rive">
  {%- capture class -%}content-over-media content-over-media--{{ section.settings.image_size }} {% if section.settings.full_width %}full-bleed{% else %}shadow-block rounded-lg{% endif %}{%- endcapture -%}

  <image-banner reveal-on-scroll="true" {% if section.settings.enable_parallax %}parallax="0.3"{% endif %} {% render 'surface', class: class, text_color: section.settings.text_color %}>
    {%- if section.settings.image != blank -%}
      {%- capture image_class -%}{% if section.settings.mobile_image != blank %}hidden sm:block{% endif %}{%- endcapture -%}
      {%- capture sizes -%}{% if section.settings.full_width %}100vw{% else %}(max-width: 740px) calc(100vw - 40px), (max-width: 999px) calc(100vw - 64px), min({{ settings.page_width }}px, 100vw - 96px){% endif %}{%- endcapture -%}

      {{- section.settings.image | image_url: width: section.settings.image.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200', class: image_class -}}

      {%- if section.settings.mobile_image != blank -%}
        {{- section.settings.mobile_image | image_url: width: section.settings.mobile_image.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600', class: 'sm:hidden' -}}
      {%- endif -%}
    {%- else -%}
      {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder' | replace: '<svg', '<svg preserveAspectRatio="xMinYMin slice"' }}
    {%- endif -%}

    {%- if section.settings.overlay_image != blank or section.settings.overlay_mobile_image != blank -%}
      {%- capture overlay_sizes -%}{% if section.settings.full_width %}100vw{% else %}(max-width: 740px) calc(100vw - 40px), (max-width: 999px) calc(100vw - 64px), min({{ settings.page_width }}px, 100vw - 96px){% endif %}{%- endcapture -%}

      {%- if section.settings.overlay_image != blank -%}
        {%- capture overlay_image_class -%}hidden sm:block pointer-events-none overlay-screen{%- endcapture -%}
        {{- section.settings.overlay_image | image_url: width: section.settings.overlay_image.width | image_tag: loading: 'lazy', sizes: overlay_sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600,1800,2000,2200,2400,2600,2800,3000,3200', class: overlay_image_class, style: 'position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;z-index:1;' -}}
      {%- endif -%}

      {%- if section.settings.overlay_mobile_image != blank -%}
        {{- section.settings.overlay_mobile_image | image_url: width: section.settings.overlay_mobile_image.width | image_tag: loading: 'lazy', sizes: overlay_sizes, widths: '200,300,400,500,600,700,800,900,1000,1200,1400,1600', class: 'sm:hidden pointer-events-none overlay-screen', style: 'position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;z-index:1;' -}}
      {%- endif -%}
    {%- endif -%}

    {%- if section.blocks.size > 0 -%}
      <div class="{{ section.settings.mobile_text_position }} {{ section.settings.desktop_text_position }}">
        <div class="prose">
          {%- for block in section.blocks -%}
            {%- case block.type -%}
              {%- when 'subheading' -%}
                {%- if block.settings.text != blank -%}
                  <p class="bold" {{ block.shopify_attributes }}>{{ block.settings.text | escape }}</p>
                {%- endif -%}

              {%- when 'heading' -%}
              <div img-w-text_wrap >
              {%- if block.settings.range_text != blank -%}
                  <p  class="{{ block.settings.heading_tag }}" {% if settings.heading_apparition != 'none' %}reveal-on-scroll="false"{% endif %} {{ block.shopify_attributes }}>
                    {%- render 'styled-text', gradient: block.settings.heading_gradient, content: block.settings.range_text, apparition_effect: true -%}
                  </p>
                {%- endif -%}

                {%- if block.settings.text != blank -%}
                  <h1 no-margin class="{{ block.settings.heading_tag }}" {% if settings.heading_apparition != 'none' %}reveal-on-scroll="false"{% endif %} {{ block.shopify_attributes }}>
                    {%- render 'styled-text', content: block.settings.text, apparition_effect: true -%}
                  </h1>
                {%- endif -%}
              </div>

              {%- when 'richtext' -%}
                {%- if block.settings.content != blank -%}
                  <div {{ block.shopify_attributes }}>
                    {{- block.settings.content -}}
                  </div>
                {%- endif -%}

              {%- when 'liquid' -%}
                {%- if block.settings.liquid != blank -%}
                  <div {{ block.shopify_attributes }}>
                    {{- block.settings.liquid -}}
                  </div>
                {%- endif -%}

              {%- when 'button' -%}
                {%- if block.settings.text != blank -%}
                  {% render 'button', content: block.settings.text, href: block.settings.url, size: block.settings.size, style: block.settings.style, background: block.settings.background, text_color: block.settings.text_color, block: block %}
                {%- endif -%}
            {%- endcase -%}
          {%- endfor -%}
        </div>
      </div>
    {%- endif -%}
  </image-banner>

  {%- comment -%}
      Rive animation blocks (decorative layer). Multiple blocks allowed.
    {%- endcomment -%}
    {%- for block in section.blocks -%}
        {%- if block.type == 'rive_animation' -%}
          <div class="rive-layer" style="z-index: {% if block.settings.layer == 'above_overlay' %}3{% else %}1{% endif %};" {{ block.shopify_attributes }}>
            <rive-media
              {% if block.settings.play_when_in_view %}play-when-in-view{% endif %}
              {% if block.settings.autoplay %}autoplay{% endif %}
              src="{{ block.settings.rive_src | escape }}"
              {% if block.settings.artboard != blank %}artboard="{{ block.settings.artboard | escape }}"{% endif %}
              {% if block.settings.state_machines != blank %}state-machines="{{ block.settings.state_machines | escape }}"{% endif %}
              data-bind-mobile="true"
            ></rive-media>
          </div>
        {%- endif -%}
      {%- endfor -%}
      
</div>

{% javascript %}
/**
 * Bind the Rive view model boolean property "mobile" to a 699px breakpoint.
 * - Safe-guards: no-ops if view model or property is missing.
 * - Works with multiple rive-media in the section.
 * - Cleans up listeners on section unload and supports theme editor re-renders.
 */
(() => {
  const mediaQuery = window.matchMedia('(max-width: 699px)');

  /**
   * Attach binding to a given rive-media element.
   * @param {HTMLElement} el - The <rive-media> element.
   */
  function attachBinding(el) {
    if (!el || el.dataset.mobileBinding === '1') return;

    /** Apply the current MQ value to the VM boolean property. */
    function applyBoolean(vmi) {
      if (!vmi) return false;
      let boolProp = null;
      try {
        if (typeof vmi.boolean === 'function') {
          boolProp = vmi.boolean('mobile');
        } else if (typeof vmi.property === 'function') {
          const p = vmi.property('mobile');
          if (p && typeof p.value === 'boolean') boolProp = p;
        }
      } catch (e) {}
      if (!boolProp) return false;

      const setValue = () => {
        try { boolProp.value = !!mediaQuery.matches; } catch (e) {}
      };
      setValue();

      // Listen for viewport changes
      if (typeof mediaQuery.addEventListener === 'function') {
        mediaQuery.addEventListener('change', setValue);
      } else if (typeof mediaQuery.addListener === 'function') {
        mediaQuery.addListener(setValue);
      }

      // Store cleanup on element
      el.__sherpaMobileBindingCleanup = () => {
        if (typeof mediaQuery.removeEventListener === 'function') {
          mediaQuery.removeEventListener('change', setValue);
        } else if (typeof mediaQuery.removeListener === 'function') {
          mediaQuery.removeListener(setValue);
        }
      };
      el.dataset.mobileBinding = '1';
      return true;
    }

    function tryBind(instance) {
      if (!instance) return;
      const vmi = instance.viewModelInstance;
      if (!vmi) return;
      applyBoolean(vmi);
    }

    // Prefer rive:ready event (dispatched when instance is ready)
    const onReady = (evt) => {
      tryBind(evt?.detail?.rive);
    };
    el.addEventListener('rive:ready', onReady, { once: true });

    // If already ready, use the exposed getter
    try {
      if (el.riveInstance) {
        tryBind(el.riveInstance);
      }
    } catch (e) {}
  }

  function initWithin(root) {
    if (!root) return;
    root.querySelectorAll('rive-media[data-bind-mobile="true"]').forEach(attachBinding);
  }

  // Initialize for all existing instances of this section type
  document.querySelectorAll('[data-section-type="image-with-text-rive"]').forEach(initWithin);

  // Theme editor lifecycle: handle load/unload per section instance
  document.addEventListener('shopify:section:load', (event) => {
    const section = event.target;
    if (!(section instanceof HTMLElement)) return;
    const root = section.querySelector('[data-section-type="image-with-text-rive"]');
    if (root) initWithin(root);
  });

  document.addEventListener('shopify:section:unload', (event) => {
    const section = event.target;
    if (!(section instanceof HTMLElement)) return;
    section.querySelectorAll('rive-media[data-bind-mobile="true"]').forEach((el) => {
      try { el.__sherpaMobileBindingCleanup?.(); } catch (e) {}
      delete el.__sherpaMobileBindingCleanup;
      if (el.dataset) delete el.dataset.mobileBinding;
    });
  });
})();
{% endjavascript %}

{% schema %}
{
  "name": "Image with text (Rive)",
  "class": "shopify-section--image-with-text-overlay",
  "tag": "section",
  "disabled_on": {
    "templates": ["password"],
    "groups": ["header", "custom.overlay"]
  },
  "max_blocks": 8,
  "settings": [
    { "type": "checkbox", "id": "full_width", "label": "Full width", "default": true },
    { "type": "checkbox", "id": "allow_transparent_header", "label": "Allow transparent header", "info": "This setting only applies when this section is the first one.", "default": false },
    { "type": "checkbox", "id": "enable_parallax", "label": "Enable parallax effect", "info": "Parallax crops images.", "default": false },
    { "type": "select", "id": "image_size", "label": "Image size", "options": [
      { "value": "auto", "label": "Original image ratio" },
      { "value": "sm", "label": "Small" },
      { "value": "md", "label": "Medium" },
      { "value": "lg", "label": "Large" },
      { "value": "fill", "label": "Fill screen" }
    ], "default": "auto",
    "info": "Choose \"Original image ratio\" to avoid image cropping."
    },
    { "type": "image_picker", "id": "image", "label": "Image", "info": "3200 x 1600px .jpg recommended" },
    { "type": "image_picker", "id": "mobile_image", "label": "Mobile image", "info": "1300 x 1500px .jpg recommended. Default to desktop image." },
    { "type": "header", "content": "Overlay images" },
    { "type": "image_picker", "id": "overlay_image", "label": "Overlay image" },
    { "type": "image_picker", "id": "overlay_mobile_image", "label": "Overlay mobile image" },
    { "type": "select", "id": "mobile_text_position", "label": "Mobile content position", "options": [
        { "value": "place-self-start text-start", "label": "Top left" },
        { "value": "place-self-start-center text-center", "label": "Top center" },
        { "value": "place-self-start-end text-end", "label": "Top right" },
        { "value": "place-self-center-start text-start", "label": "Middle left" },
        { "value": "place-self-center text-center", "label": "Middle center" },
        { "value": "place-self-center-end text-end", "label": "Middle right" },
        { "value": "place-self-end-start text-start", "label": "Bottom left" },
        { "value": "place-self-end-center text-center", "label": "Bottom center" },
        { "value": "place-self-end text-end", "label": "Bottom right" }
      ], "default": "place-self-center text-center" },
    { "type": "select", "id": "desktop_text_position", "label": "Desktop content position", "options": [
        { "value": "sm:place-self-start sm:text-start", "label": "Top left" },
        { "value": "sm:place-self-start-center sm:text-center", "label": "Top center" },
        { "value": "sm:place-self-start-end sm:text-end", "label": "Top right" },
        { "value": "sm:place-self-center-start sm:text-start", "label": "Middle left" },
        { "value": "sm:place-self-center sm:text-center", "label": "Middle center" },
        { "value": "sm:place-self-center-end sm:text-end", "label": "Middle right" },
        { "value": "sm:place-self-end-start sm:text-start", "label": "Bottom left" },
        { "value": "sm:place-self-end-center sm:text-center", "label": "Bottom center" },
        { "value": "sm:place-self-end sm:text-end", "label": "Bottom right" }
      ], "default": "sm:place-self-center sm:text-center" },
    { "type": "header", "content": "Colors" },
    { "type": "color", "id": "text_color", "label": "Text", "default": "#ffffff" },
    { "type": "color", "id": "overlay_color", "label": "Overlay", "default": "#000000" },
    { "type": "range", "id": "overlay_opacity", "label": "Overlay opacity", "min": 0, "max": 100, "step": 1, "unit": "%", "default": 30 }
  ],
  "blocks": [
    {
      "type": "subheading",
      "name": "Subheading",
      "settings": [ { "type": "text", "id": "text", "label": "Text", "default": "Subheading" } ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "settings": [
        { "type": "text", "id": "range_text", "label": "Range Text", "default": "Heading" },
        { "type": "text", "id": "text", "label": "Text", "default": "Heading" },
        { "type": "select", "id": "heading_tag", "label": "Style", "options": [
          { "value": "h0", "label": "XX-Large" },
          { "value": "h1", "label": "X-Large" },
          { "value": "h2", "label": "Large" },
          { "value": "h3", "label": "Medium" },
          { "value": "h4", "label": "Small" },
          { "value": "h5", "label": "X-Small" },
          { "value": "h6", "label": "XX-Small" }
        ], "default": "h1" },
        { "type": "color_background", "id": "heading_gradient", "label": "Impact text gradient" }
      ]
    },
    { "name": "Paragraph", "type": "richtext", "settings": [ { "type": "richtext", "id": "content", "label": "Content", "default": "<p>Use this text to share information about your brand with your customers.</p>" } ] },
    { "name": "Liquid", "type": "liquid", "settings": [ { "type": "liquid", "id": "liquid", "label": "Liquid", "default": "<p>Use this text to output some custom Liquid code.</p>" } ] },
    { "name": "Button", "type": "button", "settings": [
      { "type": "select", "id": "style", "label": "Style", "options": [ { "value": "outline", "label": "Outline" }, { "value": "fill", "label": "Fill" } ], "default": "fill" },
      { "type": "select", "id": "size", "label": "Size", "options": [ { "value": "sm", "label": "Small" }, { "value": "base", "label": "Medium" }, { "value": "lg", "label": "Large" }, { "value": "xl", "label": "X-Large" } ], "default": "lg" },
      { "type": "text", "id": "text", "label": "Text", "default": "Button text" },
      { "type": "url", "id": "url", "label": "Link" },
      { "type": "color", "id": "background", "label": "Background" },
      { "type": "color", "id": "text_color", "label": "Text" }
    ] },
    {
      "name": "Rive animation",
      "type": "rive_animation",
      "settings": [
        { "type": "text", "id": "rive_src", "label": "Rive file URL (.riv)", "info": "Provide a public URL to your .riv file (Shopify Files or CDN)." },
        { "type": "text", "id": "state_machines", "label": "State machines (comma-separated)" },
        { "type": "text", "id": "artboard", "label": "Artboard name" },
        { "type": "checkbox", "id": "autoplay", "label": "Autoplay", "default": true },
        { "type": "checkbox", "id": "play_when_in_view", "label": "Play when in view", "default": true },
        { "type": "select", "id": "layer", "label": "Layer position", "options": [
          { "value": "below_overlay", "label": "Below overlay (behind scrim)" },
          { "value": "above_overlay", "label": "Above overlay (behind text)" }
        ], "default": "below_overlay" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Image with text (Rive)",
      "blocks": [
        { "type": "subheading", "settings": { "text": "Subheading" } },
        { "type": "heading", "settings": { "text": "Image with text overlay", "heading_tag": "h1" } },
        { "type": "richtext" },
        { "type": "rive_animation", "settings": { "rive_src": "https://cdn.rive.app/animations/vehicles.riv", "state_machines": "bumpy", "autoplay": true } }
      ]
    }
  ]
}
{% endschema %}


