{%- render 'section-spacing-collapsing' -%}

{%- assign text_position = section.settings.text_position -%}

<style>
  #shopify-section-{{ section.id }} {
    --section-stack-intro: {% if text_position == 'center' %}60%{% else %}50%{% endif %};
    --section-stack-main: {% if text_position == 'center' %}60%{% else %}50%{% endif %};
  }

  .applications-section {
    {% if section.settings.background != blank %}
      background-color: {{ section.settings.background }};
    {% endif %}
    {% if section.settings.background_gradient != blank %}
      background-image: {{ section.settings.background_gradient }};
    {% endif %}
  }

  .section-stack--horizontal {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-8);
  }

  .section-stack__intro {
    width: 100%;
  }

  .section-stack__main {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-8);
    width: 100%;
    align-items: flex-start;
  }

  .applications-wrapper {
    width: calc(50% - var(--spacing-4));
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .applications-grid {
    width: 100%;
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--grid-gutter);
  }

  .section-stack__sidebar {
    width: calc(50% - var(--spacing-4));
  }

  @media (max-width: 1000px) {
    .applications-wrapper,
    .section-stack__sidebar {
      width: 100%;
    }
  }

  .application-card {
    background-color: white;
    border: 2px solid var(--button-background-primary, #25C293);
    border-radius: var(--rounded-lg);
    padding: var(--spacing-5);
    display: flex;
    align-items: center;
    gap: var(--spacing-4);
  }

  .application-card__image {
    width: 50px;
    height: 50px;
    object-fit: contain;
  }

  .application-card__content {
    flex-grow: 1;
  }

  .application-card__title {
    font-weight: bold;
    margin-bottom: var(--spacing-1);
  }

  .application-card.chatbot-card {
    background-color: #403545 !important;
    border: 2px solid #DB9BFB !important;
    color: white;
  }

  .application-card.chatbot-card .application-card__title {
    color: white;
  }

  .application-card.chatbot-card .application-card__runtime,
  .application-card.chatbot-card .application-card__power {
    font-size: 0.9em;
    opacity: 0.8;
  }

  .application-card__image svg {
    width: 50px;
    height: 50px;
  }

  .view-more-button {
    margin-top: var(--spacing-6);
  }

  @media screen and (max-width: 1000px) {
    .application-card {
      flex-direction: column;
      text-align: center;
    }
    .applications-grid {
      grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    }
  }
</style>

<div {% render 'section-properties' %}>
  <div class="applications-section {% unless section.settings.full_width %}container{% endunless %}" {% render 'section-properties' %}>
    <div class="section-stack {% if text_position != 'center' %}section-stack--horizontal{% else %}section-stack--center{% endif %} {% if text_position == 'end' %}section-stack--reverse{% endif %}">
      <div class="section-stack__intro">
        <div class="v-stack gap-10">
          <div class="prose {% if text_position == 'center' %}text-center{% endif %}">
            {%- if section.settings.subheading != blank -%}
              <p class="subheading">{{ section.settings.subheading | escape }}</p>
            {%- endif -%}

            {%- if section.settings.title != blank -%}
              <h2 class="h2">
                {%- render 'styled-text', content: section.settings.title, text_color: section.settings.heading_color, gradient: section.settings.heading_gradient -%}
              </h2>
            {%- endif -%}

            {%- if section.settings.content != blank -%}
              {{ section.settings.content }}
            {%- endif -%}
          </div>
        </div>
      </div>

      <div class="section-stack__main">
        <div class="applications-wrapper">
          {% assign appliance_data = product.metafields.custom.appliance_charge_info.value %}
          {% if appliance_data.appliances %}
            <div class="applications-grid">
              {% for appliance in appliance_data.appliances %}
                <div class="application-card">
                  {% if appliance.image %}
                    <img src="{{ appliance.image }}" alt="{{ appliance.name }}" class="application-card__image" loading="lazy">
                  {% endif %}
                  <div class="application-card__content">
                    <div class="application-card__title">{{ appliance.name }}</div>
                    <div>{{ appliance.full_charges }}</div>
                  </div>
                </div>
              {% endfor %}
            </div>
            <button id="view-more-button" class="button view-more-button">View More</button>
          {% else %}
            <p>No application data available.</p>
          {% endif %}
        </div>

          <section-chatbot product-title="{{ product.title }}" product-capacity="{{ product.metafields.custom.capacity | escape }}" class="section-chatbot section-stack__sidebar">
            {% render 'chatbot-template', 
              is_section_chatbot: section.settings.is_section_chatbot,
              calculator_title: section.settings.calculator_title,
              calculator_subtitle: section.settings.calculator_subtitle
            %}
          </section-chatbot>
        
      </div>
    </div>
  </div>
</div>

<script type="module" src="{{ 'chatbot-section.js' | asset_url }}"></script>

<script type="module">
  class DeviceLoader {
    constructor(productTitle, applicationsGridSelector, viewMoreButtonId, devicesPerPage = 4) {
      this.productTitle = productTitle;
      this.applicationsGrid = document.querySelector(applicationsGridSelector);
      this.viewMoreButton = document.getElementById(viewMoreButtonId);
      this.devicesPerPage = devicesPerPage;
      this.isExpanded = false;
    }

    loadSavedDevices() {
      const key = `${this.productTitle}_devices`;
      const devices = JSON.parse(localStorage.getItem(key) || "[]");

      devices.forEach((device) => {
        const card = this.createDeviceCard(device);
        this.insertCard(card);
      });

      this.updateDevicesView();
    }

    createDeviceCard(device) {
      const card = document.createElement("div");
      card.className = "application-card chatbot-card";
      card.innerHTML = `
        <div class="application-card__image">
          <!-- SVG and other device-related content -->
        </div>
        <div class="application-card__content">
          <div class="application-card__title">${device.name}</div>
          <div class="application-card__runtime">
            ${device.estimatedRuntime.value} ${device.estimatedRuntime.unit}
          </div>
        </div>
      `;
      return card;
    }

    insertCard(card) {
      const firstChatbotCard = this.applicationsGrid.querySelector('.application-card.chatbot-card');
      if (firstChatbotCard) {
        this.applicationsGrid.insertBefore(card, firstChatbotCard);
      } else {
        this.applicationsGrid.appendChild(card);
      }
    }

    updateDevicesView() {
      const allCards = this.applicationsGrid.querySelectorAll('.application-card.chatbot-card');
      if (allCards.length > this.devicesPerPage) {
        this.viewMoreButton.style.display = 'block';
        this.viewMoreButton.textContent = this.isExpanded ? 'View Less' : 'View More';

        allCards.forEach((card, index) => {
          card.style.display = index < this.devicesPerPage || this.isExpanded ? 'flex' : 'none';
        });
      } else {
        this.viewMoreButton.style.display = 'none';
      }
    }

    toggleDevicesView() {
      this.isExpanded = !this.isExpanded;
      this.updateDevicesView();
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const sectionChatbot = document.querySelector('.section-chatbot');
    if (sectionChatbot) {
      const productTitle = sectionChatbot.getAttribute('product-title');
      const productCapacity = sectionChatbot.getAttribute('product-capacity');
      
      const config = {
        apiEndpoint: "https://chatbottings--development.gadget.app/voiceflow",
        chatFormId: "chatForm",
        userInputId: "userInput",
        chatMessagesId: "chatMessages",
        messageContainerId: "messageContainer",
        typingIndicatorSelector: ".chat-typing",
        productTitle: productTitle,
        productCapacity: productCapacity,
      };

      sectionChatbot.initialize(config);

      const loader = new DeviceLoader(productTitle, '.applications-grid', 'view-more-button');
      loader.loadSavedDevices();

      const viewMoreButton = document.getElementById('view-more-button');
      if (viewMoreButton) {
        viewMoreButton.addEventListener('click', () => loader.toggleDevicesView());
      }
    } else {
      console.error('section-chatbot element not found');
    }
  });
</script>

{% schema %}
{
  "name": "Applications",
  "class": "shopify-section--applications",
  "tag": "section",
  "settings": [
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full width",
      "default": true
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Endless Applications"
    },
    {
      "type": "richtext",
      "id": "content",
      "label": "Content",
      "default": "<p>From the serenity of forest campsites to the comfort of your backyard, the Sherpa 1200 ensures you have the power to enjoy life's adventures without interruption.</p>"
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text position",
      "options": [
        {
          "value": "start",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "end",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background",
      "label": "Background"
    },
    {
      "type": "color_background",
      "id": "background_gradient",
      "label": "Background gradient"
    },
    {
      "type": "color",
      "id": "heading_color",
      "label": "Heading color"
    },
    {
      "type": "color_background",
      "id": "heading_gradient",
      "label": "Heading gradient"
    },
    {
      "type": "header",
      "content": "Power Calculator"
    },
    {
      "type": "text",
      "id": "calculator_title",
      "label": "Calculator Title",
      "default": "Find Out How Long The BASE 5.0 Will Power Your Appliance!"
    },
    {
      "type": "text",
      "id": "calculator_subtitle",
      "label": "Calculator Subtitle",
      "default": "For best results be specific on your item e.g Macbook 15inch 2023"
    },
    {
      "type": "checkbox",
      "id": "is_section_chatbot",
      "label": "Use Section Chatbot",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Applications"
    }
  ]
}
{% endschema %}