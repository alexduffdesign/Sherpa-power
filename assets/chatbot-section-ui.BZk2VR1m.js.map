{"version":3,"file":"chatbot-section-ui.BZk2VR1m.js","sources":["../frontend/sectionChatbot/chatbot-section-ui.js"],"sourcesContent":["// /assets/scripts/chatbot/section/chatbot-section-ui.js\n\nimport ChatbotUI from \"../baseChatbot/base-chatbot-ui.js\";\n\n/**\n * SectionChatbotUI Class\n * Extends base ChatbotUI with section-specific functionality\n */\nclass SectionChatbotUI extends ChatbotUI {\n  /**\n   * @param {Object} config - Configuration object\n   * @param {HTMLElement} config.container - The container element\n   * @param {EventEmitter} config.eventBus - Event bus instance\n   * @param {string} config.type - Type of chatbot\n   * @param {Object} config.productDetails - Product-specific information\n   */\n  constructor(config) {\n    super(config);\n    this.productDetails = config.productDetails;\n    this.setupSectionChatbotUI();\n  }\n\n  /**\n   * Set up section-specific UI elements\n   * @private\n   */\n  setupSectionChatbotUI() {\n    this.deviceAnswerGrid = this.container.querySelector(\".device-answer-grid\");\n    this.setupProductContext();\n  }\n\n  /**\n   * Set up product context in UI\n   * @private\n   */\n  setupProductContext() {\n    if (!this.productDetails) return;\n\n    const productContext = document.createElement(\"div\");\n    productContext.className = \"product-context\";\n    productContext.innerHTML = `\n      <div class=\"product-title\">${this.productDetails.title}</div>\n      ${\n        this.productDetails.capacity\n          ? `<div class=\"product-capacity\">Capacity: ${this.productDetails.capacity}</div>`\n          : \"\"\n      }\n    `;\n\n    this.container.insertBefore(productContext, this.messageContainer);\n  }\n\n  /**\n   * Update device answers in the grid\n   * @public\n   * @param {Object} data - Device answer data\n   */\n  updateDeviceAnswers(data) {\n    if (!this.deviceAnswerGrid) {\n      console.warn(\"Device answer grid not found\");\n      return;\n    }\n\n    // Clear existing content\n    this.deviceAnswerGrid.innerHTML = \"\";\n\n    // Add device name\n    if (data.deviceName) {\n      const deviceName = document.createElement(\"div\");\n      deviceName.className = \"device-name\";\n      deviceName.textContent = data.deviceName;\n      this.deviceAnswerGrid.appendChild(deviceName);\n    }\n\n    // Add results\n    if (Array.isArray(data.results)) {\n      const resultsContainer = document.createElement(\"div\");\n      resultsContainer.className = \"results-container\";\n\n      data.results.forEach((result) => {\n        const resultItem = document.createElement(\"div\");\n        resultItem.className = \"result-item\";\n        resultItem.innerHTML = `\n          <div class=\"result-value\">${result.value}</div>\n          <div class=\"result-label\">${result.label}</div>\n        `;\n        resultsContainer.appendChild(resultItem);\n      });\n\n      this.deviceAnswerGrid.appendChild(resultsContainer);\n    }\n\n    // Add recommendations\n    if (Array.isArray(data.recommendations)) {\n      const recommendationsContainer = document.createElement(\"div\");\n      recommendationsContainer.className = \"recommendations-container\";\n\n      data.recommendations.forEach((recommendation) => {\n        const recommendationItem = document.createElement(\"div\");\n        recommendationItem.className = \"recommendation-item\";\n        recommendationItem.textContent = recommendation;\n        recommendationsContainer.appendChild(recommendationItem);\n      });\n\n      this.deviceAnswerGrid.appendChild(recommendationsContainer);\n    }\n  }\n\n  /**\n   * Override message addition to handle product-specific formatting\n   * @override\n   * @param {string} sender - Message sender\n   * @param {string} content - Message content\n   * @param {Object} metadata - Optional metadata\n   */\n  addMessage(sender, content, metadata = null) {\n    // Add product context to assistant messages if needed\n    if (sender === \"assistant\" && this.productDetails.title) {\n      content = this.addProductContext(content);\n    }\n\n    super.addMessage(sender, content, metadata);\n  }\n\n  /**\n   * Add product context to message content\n   * @private\n   * @param {string} content - Original message content\n   * @returns {string} Content with product context\n   */\n  addProductContext(content) {\n    const productPlaceholder = \"{product_name}\";\n    return content.replace(productPlaceholder, this.productDetails.title);\n  }\n\n  /**\n   * Display error with product context\n   * @override\n   * @param {string} message - Error message\n   */\n  displayError(message) {\n    const errorDiv = document.createElement(\"div\");\n    errorDiv.classList.add(\"error-message\", \"section-error\");\n    errorDiv.textContent = message;\n    this.messageContainer.appendChild(errorDiv);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Update product information\n   * @public\n   * @param {Object} newDetails - Updated product details\n   */\n  updateProductDetails(newDetails) {\n    this.productDetails = { ...this.productDetails, ...newDetails };\n    const productContext = this.container.querySelector(\".product-context\");\n    if (productContext) {\n      this.setupProductContext();\n    }\n  }\n}\n\nexport default SectionChatbotUI;\n"],"names":["SectionChatbotUI","ChatbotUI","config","productContext","data","deviceName","resultsContainer","result","resultItem","recommendationsContainer","recommendation","recommendationItem","sender","content","metadata","message","errorDiv","newDetails"],"mappings":"kDAQA,MAAMA,UAAyBC,CAAU,CAQvC,YAAYC,EAAQ,CAClB,MAAMA,CAAM,EACZ,KAAK,eAAiBA,EAAO,eAC7B,KAAK,sBAAqB,CAC3B,CAMD,uBAAwB,CACtB,KAAK,iBAAmB,KAAK,UAAU,cAAc,qBAAqB,EAC1E,KAAK,oBAAmB,CACzB,CAMD,qBAAsB,CACpB,GAAI,CAAC,KAAK,eAAgB,OAE1B,MAAMC,EAAiB,SAAS,cAAc,KAAK,EACnDA,EAAe,UAAY,kBAC3BA,EAAe,UAAY;AAAA,mCACI,KAAK,eAAe,KAAK;AAAA,QAEpD,KAAK,eAAe,SAChB,2CAA2C,KAAK,eAAe,QAAQ,SACvE,EACL;AAAA,MAGH,KAAK,UAAU,aAAaA,EAAgB,KAAK,gBAAgB,CAClE,CAOD,oBAAoBC,EAAM,CACxB,GAAI,CAAC,KAAK,iBAAkB,CAC1B,QAAQ,KAAK,8BAA8B,EAC3C,MACD,CAMD,GAHA,KAAK,iBAAiB,UAAY,GAG9BA,EAAK,WAAY,CACnB,MAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,cACvBA,EAAW,YAAcD,EAAK,WAC9B,KAAK,iBAAiB,YAAYC,CAAU,CAC7C,CAGD,GAAI,MAAM,QAAQD,EAAK,OAAO,EAAG,CAC/B,MAAME,EAAmB,SAAS,cAAc,KAAK,EACrDA,EAAiB,UAAY,oBAE7BF,EAAK,QAAQ,QAASG,GAAW,CAC/B,MAAMC,EAAa,SAAS,cAAc,KAAK,EAC/CA,EAAW,UAAY,cACvBA,EAAW,UAAY;AAAA,sCACOD,EAAO,KAAK;AAAA,sCACZA,EAAO,KAAK;AAAA,UAE1CD,EAAiB,YAAYE,CAAU,CAC/C,CAAO,EAED,KAAK,iBAAiB,YAAYF,CAAgB,CACnD,CAGD,GAAI,MAAM,QAAQF,EAAK,eAAe,EAAG,CACvC,MAAMK,EAA2B,SAAS,cAAc,KAAK,EAC7DA,EAAyB,UAAY,4BAErCL,EAAK,gBAAgB,QAASM,GAAmB,CAC/C,MAAMC,EAAqB,SAAS,cAAc,KAAK,EACvDA,EAAmB,UAAY,sBAC/BA,EAAmB,YAAcD,EACjCD,EAAyB,YAAYE,CAAkB,CAC/D,CAAO,EAED,KAAK,iBAAiB,YAAYF,CAAwB,CAC3D,CACF,CASD,WAAWG,EAAQC,EAASC,EAAW,KAAM,CAEvCF,IAAW,aAAe,KAAK,eAAe,QAChDC,EAAU,KAAK,kBAAkBA,CAAO,GAG1C,MAAM,WAAWD,EAAQC,EAASC,CAAQ,CAC3C,CAQD,kBAAkBD,EAAS,CAEzB,OAAOA,EAAQ,QADY,iBACgB,KAAK,eAAe,KAAK,CACrE,CAOD,aAAaE,EAAS,CACpB,MAAMC,EAAW,SAAS,cAAc,KAAK,EAC7CA,EAAS,UAAU,IAAI,gBAAiB,eAAe,EACvDA,EAAS,YAAcD,EACvB,KAAK,iBAAiB,YAAYC,CAAQ,EAC1C,KAAK,eAAc,CACpB,CAOD,qBAAqBC,EAAY,CAC/B,KAAK,eAAiB,CAAE,GAAG,KAAK,eAAgB,GAAGA,GAC5B,KAAK,UAAU,cAAc,kBAAkB,GAEpE,KAAK,oBAAmB,CAE3B,CACH"}