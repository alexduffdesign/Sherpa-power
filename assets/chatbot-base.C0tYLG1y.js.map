{"version":3,"file":"chatbot-base.C0tYLG1y.js","sources":["../frontend/entrypoints/chatbot-base.js"],"sourcesContent":["import { ApiClient } from './chatbot-api';\nimport { UIManager } from './chatbot-ui';\nimport { StreamHandler } from './chatbot-stream';\nimport { TraceHandler } from './chatbot-trace';\n\nexport class ChatbotBase {\n    constructor(config) {\n        console.log(\"ChatbotBase constructor called with config:\", config);\n        \n        // Initialize core components\n        this.api = new ApiClient(config);\n        this.ui = new UIManager();\n        this.stream = new StreamHandler();\n        this.traceHandler = new TraceHandler(this.ui);\n        \n        // Set up trace handling\n        this.traceHandler.onSpecialTrace = this.handleSpecialTrace.bind(this);\n        \n        // Bind methods\n        this.sendMessage = this.sendMessage.bind(this);\n        this.handleButtonClick = this.handleButtonClick.bind(this);\n    }\n\n    setDOMElements(messageContainer, typingIndicator, drawerBody) {\n        this.ui.setDOMElements(messageContainer, typingIndicator, drawerBody);\n    }\n\n    async sendMessage(message) {\n        console.log(\"Sending message:\", message);\n        \n        try {\n            // Close any existing stream\n            this.stream.closeCurrentStream();\n            \n            // Start new stream\n            const response = await this.api.streamInteract(message);\n            await this.stream.handleStream(response, this.traceHandler);\n            \n            return { success: true };\n        } catch (error) {\n            console.error(\"Error in send message:\", error);\n            throw error;\n        }\n    }\n\n    async handleButtonClick(buttonData) {\n        console.log(\"Handling button click:\", buttonData);\n        this.ui.removeButtons();\n        return await this.sendMessage(buttonData.name);\n    }\n\n    // Override this method in child classes to handle special traces\n    async handleSpecialTrace(trace) {\n        console.log(\"Base handler received special trace:\", trace);\n    }\n}\n"],"names":["ChatbotBase","config","ApiClient","UIManager","StreamHandler","TraceHandler","messageContainer","typingIndicator","drawerBody","message","response","error","buttonData","trace"],"mappings":"4LAKO,MAAMA,CAAY,CACrB,YAAYC,EAAQ,CAChB,QAAQ,IAAI,8CAA+CA,CAAM,EAGjE,KAAK,IAAM,IAAIC,EAAUD,CAAM,EAC/B,KAAK,GAAK,IAAIE,EACd,KAAK,OAAS,IAAIC,EAClB,KAAK,aAAe,IAAIC,EAAa,KAAK,EAAE,EAG5C,KAAK,aAAa,eAAiB,KAAK,mBAAmB,KAAK,IAAI,EAGpE,KAAK,YAAc,KAAK,YAAY,KAAK,IAAI,EAC7C,KAAK,kBAAoB,KAAK,kBAAkB,KAAK,IAAI,CAC5D,CAED,eAAeC,EAAkBC,EAAiBC,EAAY,CAC1D,KAAK,GAAG,eAAeF,EAAkBC,EAAiBC,CAAU,CACvE,CAED,MAAM,YAAYC,EAAS,CACvB,QAAQ,IAAI,mBAAoBA,CAAO,EAEvC,GAAI,CAEA,KAAK,OAAO,qBAGZ,MAAMC,EAAW,MAAM,KAAK,IAAI,eAAeD,CAAO,EACtD,aAAM,KAAK,OAAO,aAAaC,EAAU,KAAK,YAAY,EAEnD,CAAE,QAAS,GACrB,OAAQC,EAAO,CACZ,cAAQ,MAAM,yBAA0BA,CAAK,EACvCA,CACT,CACJ,CAED,MAAM,kBAAkBC,EAAY,CAChC,eAAQ,IAAI,yBAA0BA,CAAU,EAChD,KAAK,GAAG,gBACD,MAAM,KAAK,YAAYA,EAAW,IAAI,CAChD,CAGD,MAAM,mBAAmBC,EAAO,CAC5B,QAAQ,IAAI,uCAAwCA,CAAK,CAC5D,CACL"}