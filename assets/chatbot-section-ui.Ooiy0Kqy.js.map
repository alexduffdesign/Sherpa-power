{"version":3,"file":"chatbot-section-ui.Ooiy0Kqy.js","sources":["../frontend/sectionChatbot/chatbot-section-ui.js"],"sourcesContent":["// /assets/scripts/chatbot/section/section-chatbot-ui.js\n\nimport { BaseChatbotUI } from \"../baseChatbot/base-chatbot-ui.js\";\n\n/**\n * SectionChatbotUI Class\n * Extends BaseChatbotUI with specific UI logic for the Section Chatbot\n * Handles product-specific UI elements and device_answer displays\n * @extends BaseChatbotUI\n */\nexport class SectionChatbotUI extends BaseChatbotUI {\n  /**\n   * @param {ShadowRoot} shadowRoot - The shadow root of the chatbot component\n   * @param {EventEmitter} eventBus - The event bus for this chatbot instance\n   */\n  constructor(shadowRoot, eventBus) {\n    super(shadowRoot, eventBus);\n    this.setupSectionSpecificEventListeners();\n  }\n\n  /**\n   * Set up section-specific event listeners\n   * @private\n   */\n  setupSectionSpecificEventListeners() {\n    // Handle device answer displays\n    this.eventBus.on(\"deviceAnswer\", ({ applications }) => {\n      this.displayDeviceAnswer(applications);\n    });\n  }\n\n  /**\n   * Display device answer in the applications grid\n   * @private\n   * @param {Array} applications - List of applications from device_answer\n   */\n  displayDeviceAnswer(applications) {\n    const applicationsGrid = document.querySelector(\".applications-grid\");\n    if (!applicationsGrid) return;\n\n    // Clear existing applications\n    applicationsGrid.innerHTML = \"\";\n\n    // Create and append application elements\n    applications.forEach((app) => {\n      const appElement = this.createApplicationElement(app);\n      applicationsGrid.appendChild(appElement);\n    });\n  }\n\n  /**\n   * Create an application element for the grid\n   * @private\n   * @param {Object} app - Application data\n   * @returns {HTMLElement} The created application element\n   */\n  createApplicationElement(app) {\n    const element = document.createElement(\"div\");\n    element.className = \"application-item\";\n\n    const icon = document.createElement(\"img\");\n    icon.src = app.iconUrl || \"\";\n    icon.alt = app.name || \"Application Icon\";\n    icon.className = \"application-icon\";\n\n    const name = document.createElement(\"span\");\n    name.textContent = app.name || \"Unknown Application\";\n    name.className = \"application-name\";\n\n    const power = document.createElement(\"span\");\n    power.className = \"power-requirement\";\n    power.textContent = app.powerRequirement\n      ? `${app.powerRequirement}W`\n      : \"N/A\";\n\n    element.appendChild(icon);\n    element.appendChild(name);\n    element.appendChild(power);\n\n    return element;\n  }\n\n  /**\n   * Override addMessage to handle section-specific message formatting\n   * @override\n   * @param {string} sender - Message sender (user/assistant)\n   * @param {string} content - Message content\n   * @param {Object} metadata - Additional message metadata\n   */\n  addMessage(sender, content, metadata = null) {\n    if (sender === \"assistant\" && metadata?.productContext) {\n      content = this.formatMessageWithProductContext(\n        content,\n        metadata.productContext\n      );\n    }\n    super.addMessage(sender, content, metadata);\n  }\n\n  /**\n   * Format message with product context\n   * @private\n   * @param {string} message - Original message\n   * @param {Object} context - Product context\n   * @returns {string} Formatted message\n   */\n  formatMessageWithProductContext(message, context) {\n    return message.replace(/\\{(\\w+)\\}/g, (match, key) => context[key] || match);\n  }\n}\n\nexport default SectionChatbotUI;\n"],"names":["SectionChatbotUI","BaseChatbotUI","shadowRoot","eventBus","applications","applicationsGrid","app","appElement","element","icon","name","power","sender","content","metadata","message","context","match","key"],"mappings":"kDAUO,MAAMA,UAAyBC,CAAc,CAKlD,YAAYC,EAAYC,EAAU,CAChC,MAAMD,EAAYC,CAAQ,EAC1B,KAAK,mCAAkC,CACxC,CAMD,oCAAqC,CAEnC,KAAK,SAAS,GAAG,eAAgB,CAAC,CAAE,aAAAC,CAAY,IAAO,CACrD,KAAK,oBAAoBA,CAAY,CAC3C,CAAK,CACF,CAOD,oBAAoBA,EAAc,CAChC,MAAMC,EAAmB,SAAS,cAAc,oBAAoB,EAC/DA,IAGLA,EAAiB,UAAY,GAG7BD,EAAa,QAASE,GAAQ,CAC5B,MAAMC,EAAa,KAAK,yBAAyBD,CAAG,EACpDD,EAAiB,YAAYE,CAAU,CAC7C,CAAK,EACF,CAQD,yBAAyBD,EAAK,CAC5B,MAAME,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,UAAY,mBAEpB,MAAMC,EAAO,SAAS,cAAc,KAAK,EACzCA,EAAK,IAAMH,EAAI,SAAW,GAC1BG,EAAK,IAAMH,EAAI,MAAQ,mBACvBG,EAAK,UAAY,mBAEjB,MAAMC,EAAO,SAAS,cAAc,MAAM,EAC1CA,EAAK,YAAcJ,EAAI,MAAQ,sBAC/BI,EAAK,UAAY,mBAEjB,MAAMC,EAAQ,SAAS,cAAc,MAAM,EAC3C,OAAAA,EAAM,UAAY,oBAClBA,EAAM,YAAcL,EAAI,iBACpB,GAAGA,EAAI,gBAAgB,IACvB,MAEJE,EAAQ,YAAYC,CAAI,EACxBD,EAAQ,YAAYE,CAAI,EACxBF,EAAQ,YAAYG,CAAK,EAElBH,CACR,CASD,WAAWI,EAAQC,EAASC,EAAW,KAAM,CACvCF,IAAW,cAAeE,GAAA,MAAAA,EAAU,kBACtCD,EAAU,KAAK,gCACbA,EACAC,EAAS,cACjB,GAEI,MAAM,WAAWF,EAAQC,EAASC,CAAQ,CAC3C,CASD,gCAAgCC,EAASC,EAAS,CAChD,OAAOD,EAAQ,QAAQ,aAAc,CAACE,EAAOC,IAAQF,EAAQE,CAAG,GAAKD,CAAK,CAC3E,CACH"}