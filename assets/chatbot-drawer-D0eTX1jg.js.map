{"version":3,"file":"chatbot-drawer-D0eTX1jg.js","sources":["../frontend/entrypoints/chatbot-drawer.js"],"sourcesContent":["import { Drawer } from \"./theme.js\";\nimport MainChatbot from \"./chatbot-main.js\";\n\nconsole.log(\"Chatbot drawer script loaded\");\n\nfunction initChatbotDrawer(drawerId) {\n  // Define the MainChatbotElement custom element\n  class MainChatbotElement extends HTMLElement {\n    constructor() {\n      super();\n      this.mainChatbot = null;\n    }\n\n    connectedCallback() {\n      if (!this.mainChatbot) {\n        console.log(\"MainChatbotElement connected\");\n        const config = {\n          voiceflowEndpoint:\n            \"https://chatbottings--development.gadget.app/voiceflow\",\n        };\n        this.mainChatbot = new MainChatbot(this, config);\n      }\n    }\n\n    async initializeNewChat() {\n      console.log(\"MainChatbotElement initializeNewChat called\");\n      if (this.mainChatbot) {\n        await this.mainChatbot.initializeNewChat();\n      } else {\n        console.error(\n          \"MainChatbot not initialized when trying to initialize new chat\"\n        );\n      }\n    }\n  }\n\n  // Define custom elements\n  customElements.define(\"main-chatbot\", MainChatbotElement);\n\n  // Function to initialize the chat\n  async function initializeChat(drawerElement) {\n    const mainChatbotElement = drawerElement.querySelector(\"main-chatbot\");\n    if (mainChatbotElement) {\n      const hasLaunched = localStorage.getItem(\"chatHasLaunched\") === \"true\";\n      if (!hasLaunched) {\n        console.log(\"First time opening chatbot, initializing new chat\");\n        await mainChatbotElement.initializeNewChat();\n        localStorage.setItem(\"chatHasLaunched\", \"true\");\n      } else {\n        console.log(\"Chatbot has been launched before\");\n      }\n    } else {\n      console.error(\"MainChatbot element not found in drawer\");\n    }\n  }\n\n  // Event listeners for drawer open/close events\n  document.addEventListener(\"dialog:after-show\", async (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer opened\");\n      const chatbotDrawer = document.getElementById(drawerId);\n      if (chatbotDrawer) {\n        await initializeChat(chatbotDrawer);\n      } else {\n        console.error(\"Chatbot drawer not found\");\n      }\n    }\n  });\n\n  document.addEventListener(\"dialog:after-hide\", (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer closed\");\n    }\n  });\n}\n\n// Expose the function to the global scope\nwindow.initChatbotDrawer = initChatbotDrawer;\n\n// Immediately invoke the function if the drawer ID is available\nif (window.chatbotDrawerId) {\n  initChatbotDrawer(window.chatbotDrawerId);\n}\n"],"names":["initChatbotDrawer","drawerId","MainChatbotElement","config","MainChatbot","initializeChat","drawerElement","mainChatbotElement","event","chatbotDrawer"],"mappings":"qNAGA,QAAQ,IAAI,8BAA8B,EAE1C,SAASA,EAAkBC,EAAU,CAEnC,MAAMC,UAA2B,WAAY,CAC3C,aAAc,CACZ,QACA,KAAK,YAAc,IACpB,CAED,mBAAoB,CAClB,GAAI,CAAC,KAAK,YAAa,CACrB,QAAQ,IAAI,8BAA8B,EAC1C,MAAMC,EAAS,CACb,kBACE,wDACZ,EACQ,KAAK,YAAc,IAAIC,EAAY,KAAMD,CAAM,CAChD,CACF,CAED,MAAM,mBAAoB,CACxB,QAAQ,IAAI,6CAA6C,EACrD,KAAK,YACP,MAAM,KAAK,YAAY,oBAEvB,QAAQ,MACN,gEACV,CAEK,CACF,CAGD,eAAe,OAAO,eAAgBD,CAAkB,EAGxD,eAAeG,EAAeC,EAAe,CAC3C,MAAMC,EAAqBD,EAAc,cAAc,cAAc,EACjEC,EACkB,aAAa,QAAQ,iBAAiB,IAAM,OAM9D,QAAQ,IAAI,kCAAkC,GAJ9C,QAAQ,IAAI,mDAAmD,EAC/D,MAAMA,EAAmB,oBACzB,aAAa,QAAQ,kBAAmB,MAAM,GAKhD,QAAQ,MAAM,yCAAyC,CAE1D,CAGD,SAAS,iBAAiB,oBAAqB,MAAOC,GAAU,CAC9D,GAAIA,EAAM,OAAO,KAAOP,EAAU,CAChC,QAAQ,IAAI,uBAAuB,EACnC,MAAMQ,EAAgB,SAAS,eAAeR,CAAQ,EAClDQ,EACF,MAAMJ,EAAeI,CAAa,EAElC,QAAQ,MAAM,0BAA0B,CAE3C,CACL,CAAG,EAED,SAAS,iBAAiB,oBAAsBD,GAAU,CACpDA,EAAM,OAAO,KAAOP,GACtB,QAAQ,IAAI,uBAAuB,CAEzC,CAAG,CACH,CAGA,OAAO,kBAAoBD,EAGvB,OAAO,iBACTA,EAAkB,OAAO,eAAe"}