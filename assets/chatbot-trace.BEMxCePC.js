class l{constructor(a){this.ui=a,this.onSpecialTrace=null}async handleTrace(a){var e,s,i;switch(console.log("Handling trace:",a),this.onSpecialTrace&&await this.onSpecialTrace(a),a.type){case"text":(e=a.payload)!=null&&e.message&&this.ui.addMessage("assistant",a.payload.message);break;case"path":console.log("Path trace received:",a.payload);break;case"choice":(s=a.payload)!=null&&s.buttons&&this.ui.addButtons(a.payload.buttons);break;case"carousel":a.payload&&this.ui.addCarousel(a.payload);break;case"visual":((i=a.payload)==null?void 0:i.visualType)==="image"&&this.ui.addVisualImage(a.payload);break;case"waiting_text":this.ui.showTypingIndicator(a.payload);break;case"end":console.log("Stream ended"),this.ui.hideTypingIndicator();break;default:console.log("Unhandled trace type:",a.type)}}}export{l as T};
//# sourceMappingURL=chatbot-trace.BEMxCePC.js.map
