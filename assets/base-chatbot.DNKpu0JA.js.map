{"version":3,"file":"base-chatbot.DNKpu0JA.js","sources":["../frontend/utils/user-id-generator.js","../frontend/baseChatbot/base-chatbot.js"],"sourcesContent":["/**\n * Generates a unique user ID with the specified prefix.\n * @param {string} prefix - The prefix indicating the chatbot type ('mainChatbot' or 'sectionChatbot').\n * @returns {string} - The generated unique user ID.\n */\nexport function generateUserId(prefix) {\n  const uniquePart =\n    Date.now().toString(36) + Math.random().toString(36).substr(2, 9);\n  return `${prefix}-${uniquePart}`;\n}\n","import EventEmitter from \"eventemitter3\";\nimport { generateUserId } from \"../utils/user-id-generator.js\";\n\n/**\n * Gadget API endpoint for Voiceflow streaming\n * @constant\n * @type {string}\n */\nconst GADGET_API_ENDPOINT =\n  \"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming\";\n\n/**\n * BaseChatbot Web Component\n * Base class for all chatbot implementations\n * Handles core functionality and communication with Voiceflow API\n */\nexport class BaseChatbot extends HTMLElement {\n  constructor() {\n    super();\n    this.attachShadow({ mode: \"open\" });\n\n    // Create local event bus\n    this.eventBus = new EventEmitter();\n\n    // Initialize state\n    this.userID = generateUserId();\n    this.abortController = null;\n  }\n\n  /**\n   * Define observed attributes for the web component\n   */\n  static get observedAttributes() {\n    return [\"endpoint\"];\n  }\n\n  /**\n   * Called when the element is added to the document\n   */\n  connectedCallback() {\n    this.initialize();\n  }\n\n  /**\n   * Called when the element is removed from the document\n   */\n  disconnectedCallback() {\n    this.cleanup();\n  }\n\n  /**\n   * Initialize the chatbot\n   * @private\n   */\n  initialize() {\n    this.setupEventListeners();\n  }\n\n  /**\n   * Launch the chatbot\n   * @public\n   */\n  launch() {\n    this.sendLaunch();\n  }\n\n  /**\n   * Set up core event listeners\n   * @private\n   */\n  setupEventListeners() {\n    // Message handling\n    this.eventBus.on(\"userMessage\", (message) => this.sendMessage(message));\n    this.eventBus.on(\"buttonClicked\", (payload) => this.sendMessage(payload));\n  }\n\n  /**\n   * Sends a launch request to initiate the conversation\n   */\n  async sendLaunch(interactPayload = {}) {\n    console.log(\"Constructing launch payload:\", interactPayload);\n    const payload = interactPayload.action\n      ? interactPayload\n      : {\n          action: {\n            type: \"launch\",\n          },\n        };\n\n    return this.sendAction(payload);\n  }\n\n  /**\n   * Sends a user message to the chatbot\n   * @param {string | Object} message - The user's message or button payload\n   */\n  async sendMessage(message) {\n    console.log(\"Sending message:\", message);\n    const payload = {\n      action: {\n        type: \"text\",\n        payload: typeof message === \"object\" ? message : message,\n      },\n    };\n\n    return this.sendAction(payload);\n  }\n\n  /**\n   * Sends an action to the Voiceflow API via Gadget\n   * @param {Object} actionPayload - The action payload to send\n   */\n  async sendAction(actionPayload) {\n    try {\n      // Abort any existing request\n      if (this.abortController) {\n        this.abortController.abort();\n      }\n\n      this.abortController = new AbortController();\n      const { signal } = this.abortController;\n\n      // Show typing indicator\n      this.eventBus.emit(\"typing\", { isTyping: true });\n\n      const response = await fetch(GADGET_API_ENDPOINT, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          userID: this.userID,\n          action: actionPayload.action,\n        }),\n        credentials: \"include\",\n        signal,\n      });\n\n      if (!response.ok) {\n        throw new Error(`API responded with status ${response.status}`);\n      }\n\n      await this.handleSSEResponse(response);\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  /**\n   * Handles the SSE response from the API\n   * @private\n   */\n  async handleSSEResponse(response) {\n    const reader = response.body.getReader();\n    const decoder = new TextDecoder(\"utf-8\");\n    let buffer = \"\";\n\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n          this.eventBus.emit(\"end\", {});\n          break;\n        }\n\n        buffer += decoder.decode(value, { stream: true });\n        const events = buffer.split(\"\\n\\n\");\n        buffer = events.pop();\n\n        for (const eventStr of events) {\n          if (eventStr.trim() === \"\") continue;\n          this.processEventString(eventStr);\n        }\n      }\n    } catch (error) {\n      this.handleError(error);\n    } finally {\n      this.eventBus.emit(\"typing\", { isTyping: false });\n    }\n  }\n\n  /**\n   * Process an individual SSE event string\n   * @private\n   */\n  processEventString(eventStr) {\n    try {\n      const lines = eventStr.split(\"\\n\");\n      const eventTypeLine = lines.find((line) => line.startsWith(\"event:\"));\n      const dataLine = lines.find((line) => line.startsWith(\"data:\"));\n\n      const eventType = eventTypeLine\n        ? eventTypeLine.split(\":\")[1].trim()\n        : \"trace\";\n      const data = dataLine\n        ? JSON.parse(eventStr.substring(eventStr.indexOf(\"data:\") + 5).trim())\n        : null;\n\n      if (eventType === \"trace\") {\n        this.processTrace(data);\n      }\n    } catch (error) {\n      console.error(\"Error processing SSE event:\", error);\n    }\n  }\n\n  /**\n   * Process a trace event from Voiceflow\n   * @protected - Can be extended by child classes\n   */\n  processTrace(trace) {\n    if (!trace.type) {\n      console.warn(\"Trace without type received:\", trace);\n      return;\n    }\n\n    // Hide typing indicator when we receive any trace\n    this.eventBus.emit(\"typing\", { isTyping: false });\n\n    switch (trace.type) {\n      case \"text\":\n        this.eventBus.emit(\"messageReceived\", {\n          content: trace.payload.message,\n          metadata: trace.payload.metadata || null,\n        });\n        break;\n\n      case \"choice\":\n        this.eventBus.emit(\"choicePresented\", {\n          type: \"choice\",\n          buttons: trace.payload.buttons,\n        });\n        break;\n\n      case \"carousel\":\n        this.eventBus.emit(\"carouselPresented\", {\n          type: \"carousel\",\n          items: trace.payload.cards,\n        });\n        break;\n\n      case \"waiting_text\":\n        this.eventBus.emit(\"typingText\", {\n          text: trace.payload.text,\n        });\n        this.eventBus.emit(\"typing\", { isTyping: true });\n        break;\n\n      default:\n        console.warn(`Unhandled trace type: ${trace.type}`, trace);\n    }\n  }\n\n  /**\n   * Handle errors in the chatbot\n   * @protected - Can be extended by child classes\n   */\n  handleError(error) {\n    console.error(\"Chatbot error:\", error);\n    this.eventBus.emit(\"error\", { message: error.message });\n    this.eventBus.emit(\"typing\", { isTyping: false });\n  }\n\n  /**\n   * Clean up resources when the component is destroyed\n   */\n  cleanup() {\n    if (this.abortController) {\n      this.abortController.abort();\n    }\n    this.eventBus.removeAllListeners();\n  }\n}\n"],"names":["generateUserId","prefix","uniquePart","GADGET_API_ENDPOINT","BaseChatbot","EventEmitter","message","payload","interactPayload","actionPayload","signal","response","error","reader","decoder","buffer","done","value","events","eventStr","lines","eventTypeLine","line","dataLine","eventType","data","trace"],"mappings":"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"}