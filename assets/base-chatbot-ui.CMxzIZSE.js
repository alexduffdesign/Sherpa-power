class r{constructor(e){if(!e.container)throw new Error("ChatbotUI requires a container element");if(!e.eventBus)throw new Error("ChatbotUI requires an event bus");this.container=e.container,this.eventBus=e.eventBus,this.type=e.type,this.currentAssistantMessage=null,this.accumulatedContent="",this.setupUIElements(),this.setupEventListeners()}setupUIElements(){var a;const e=this.container.querySelectorAll(".message-container");this.messageContainer=e[0],console.log("Message container found:",!!this.messageContainer);const t=this.container.querySelectorAll(".chat-form");this.form=t[0],console.log("Chat form found:",!!this.form);const s=this.container.querySelectorAll(".chatbot-input");this.input=s[0],console.log("Chat input found:",!!this.input);const n=this.container.querySelectorAll(".chat-typing");if(this.typingIndicator=n[0],console.log("Typing indicator found:",!!this.typingIndicator),this.typingText=(a=this.typingIndicator)==null?void 0:a.querySelector(".typing-text"),console.log("Typing text found:",!!this.typingText),console.log("Container HTML:",this.container.innerHTML),!this.messageContainer||!this.form||!this.input){const i=[];throw this.messageContainer||i.push("message-container"),this.form||i.push("chat-form"),this.input||i.push("chatbot-input"),new Error(`Required UI elements not found: ${i.join(", ")}`)}}setupEventListeners(){this.form.addEventListener("submit",e=>{e.preventDefault();const t=this.input.value.trim();t&&(this.eventBus.emit("userMessage",t),this.input.value="")}),this.eventBus.on("messageReceived",({content:e,metadata:t})=>{console.log("UI received messageReceived event:",e,t),this.handleAssistantMessage(e,t)}),this.eventBus.on("partialMessage",e=>{this.handlePartialMessage(e)}),this.eventBus.on("finalMessage",e=>{this.handleFinalMessage(e)}),this.eventBus.on("typing",({isTyping:e})=>{e?this.showTypingIndicator():this.hideTypingIndicator()}),this.eventBus.on("error",({message:e})=>{this.displayError(e)}),this.eventBus.on("choicePresented",({buttons:e})=>{this.addButtons(e)}),this.eventBus.on("carouselPresented",({items:e})=>{this.addCarousel(e)}),this.eventBus.on("end",()=>{this.currentAssistantMessage=null,this.accumulatedContent=""})}handleAssistantMessage(e,t){const s=parseMarkdown(e),n=this.createMessage("assistant",s,t);this.messageContainer.appendChild(n),this.scrollToBottom()}handlePartialMessage(e){this.accumulatedContent+=e;const t=/([.!?;]\s)|(\n)/,s=this.accumulatedContent.match(t);if(s){const n=s.index+s[0].length,a=this.accumulatedContent.slice(0,n).trim(),i=this.accumulatedContent.slice(n).trim();this.currentAssistantMessage?this.currentAssistantMessage.appendContent(parseMarkdown(a)):(this.currentAssistantMessage=this.createMessage("assistant",parseMarkdown(a),null),this.messageContainer.appendChild(this.currentAssistantMessage)),this.accumulatedContent=i,this.scrollToBottom()}else this.currentAssistantMessage?this.currentAssistantMessage.appendContent(parseMarkdown(e)):(this.currentAssistantMessage=this.createMessage("assistant",parseMarkdown(e),null),this.messageContainer.appendChild(this.currentAssistantMessage)),this.scrollToBottom()}handleFinalMessage(e){if(this.currentAssistantMessage)this.currentAssistantMessage.appendContent(parseMarkdown(e)),this.currentAssistantMessage=null,this.accumulatedContent="",this.scrollToBottom();else{const t=parseMarkdown(e),s=this.createMessage("assistant",t,null);this.messageContainer.appendChild(s),this.scrollToBottom()}}createMessage(e,t,s=null){const n=document.createElement("message-component");return n.eventBus=this.eventBus,n.setAttribute("sender",e),n.setAttribute("content",t),s&&n.setAttribute("metadata",JSON.stringify(s)),n}addMessage(e,t,s=null){if(console.log(`addMessage called with sender=${e}, content=${t}, metadata=`,s),e==="assistant")this.handleAssistantMessage(t,s);else{const n=this.createMessage(e,t,s);this.messageContainer.appendChild(n),this.scrollToBottom()}}addButtons(e){if(!Array.isArray(e)){console.error("Invalid buttons data:",e);return}const t=document.createElement("div");t.className="button-group",e.forEach(s=>{const n=document.createElement("button-component");n.eventBus=this.eventBus,n.setAttribute("label",s.name),n.setAttribute("payload",JSON.stringify(s.request)),t.appendChild(n)}),this.messageContainer.appendChild(t),this.scrollToBottom()}addCarousel(e){if(!Array.isArray(e)){console.error("Invalid carousel items:",e);return}const t=document.createElement("carousel-component");t.eventBus=this.eventBus,t.setAttribute("data-carousel",JSON.stringify({cards:e})),this.messageContainer.appendChild(t),this.scrollToBottom()}showTypingIndicator(){this.typingIndicator&&(this.typingIndicator.style.display="flex",this.scrollToBottom())}hideTypingIndicator(){this.typingIndicator&&(this.typingIndicator.style.display="none")}displayError(e){const t=document.createElement("div");t.classList.add("error-message"),t.textContent=e,this.messageContainer.appendChild(t),this.scrollToBottom()}removeInteractiveElements(){this.messageContainer.querySelectorAll("button-component, carousel-component, .button-group").forEach(t=>t.remove())}scrollToBottom(){this.messageContainer.scrollTop=this.messageContainer.scrollHeight}destroy(){this.eventBus.removeAllListeners()}}export{r as C};
//# sourceMappingURL=base-chatbot-ui.CMxzIZSE.js.map
