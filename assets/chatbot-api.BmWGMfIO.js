class n{constructor(t){this.apiEndpoint=t.apiEndpoint,this.streamingEndpoint="https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming",this.userID=this.generateUserID(t.userIDPrefix||"chatbot")}generateUserID(t){const r=localStorage.getItem(`${t}_userID`);if(r)return r;const o=`${t}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return localStorage.setItem(`${t}_userID`,o),o}async streamInteract(t){console.log("Streaming interaction with message:",t);const r=new URL(this.streamingEndpoint);r.searchParams.append("userID",this.userID);const o={action:{type:"text",payload:t},userID:this.userID,config:{tts:!1,stripSSML:!0}};try{const e=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)});if(!e.ok)throw new Error(`HTTP error! status: ${e.status}`);return e}catch(e){throw console.error("Error in stream interact:",e),e}}async gadgetInteract(t){console.log("Gadget interaction with message:",t);try{const r=await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:t,userID:this.userID})});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return await r.json()}catch(r){throw console.error("Error in gadget interact:",r),r}}}export{n as A};
//# sourceMappingURL=chatbot-api.BmWGMfIO.js.map
