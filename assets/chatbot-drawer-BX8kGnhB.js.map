{"version":3,"file":"chatbot-drawer-BX8kGnhB.js","sources":["../frontend/entrypoints/chatbot-drawer.js"],"sourcesContent":["// chatbot-drawer.js\n\nimport { Drawer } from \"./theme.js\";\nimport MainChatbot from \"./chatbot-main.js\";\n\nconsole.log(\"Chatbot drawer script loaded\");\n\nfunction initChatbotDrawer(drawerId) {\n  // Define the MainChatbot custom element\n  class MainChatbotElement extends HTMLElement {\n    constructor() {\n      super();\n      if (!MainChatbotElement.instance) {\n        MainChatbotElement.instance = this;\n        this.mainChatbot = null;\n      }\n      return MainChatbotElement.instance;\n    }\n\n    connectedCallback() {\n      if (!this.mainChatbot) {\n        console.log(\"MainChatbotElement connected\");\n        const config = {\n          voiceflowEndpoint:\n            \"https://chatbottings--development.gadget.app/voiceflow\",\n        };\n        this.mainChatbot = new MainChatbot(this, config);\n        // Removed: this.mainChatbot.initializeChat();\n      }\n    }\n  }\n\n  // Define the ChatbotDrawer class\n  class ChatbotDrawer extends Drawer {\n    constructor() {\n      super();\n      this.mainChatbotElement = null;\n      this.initialized = false;\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n      this.mainChatbotElement = this.querySelector(\"main-chatbot\");\n      if (!this.mainChatbotElement) {\n        console.error(\"MainChatbot not found in ChatbotDrawer\");\n      } else {\n        console.log(\n          \"MainChatbotElement found in ChatbotDrawer:\",\n          this.mainChatbotElement\n        );\n      }\n\n      // Listen to 'dialog:after-show' event to initialize the chatbot\n      this.addEventListener(\"dialog:after-show\", this.onAfterShow.bind(this));\n    }\n\n    onAfterShow() {\n      console.log(\"dialog:after-show event received\");\n      if (this.mainChatbotElement && !this.initialized) {\n        console.log(\"Initializing Chatbot on drawer open\");\n        this.mainChatbotElement.mainChatbot.initializeChat();\n        this.initialized = true;\n      } else if (this.initialized) {\n        console.log(\"Chatbot already initialized\");\n      } else {\n        console.error(\"mainChatbotElement or mainChatbot is missing\");\n      }\n    }\n\n    // Optionally, handle 'dialog:after-hide' if needed\n    onAfterHide() {\n      console.log(\"dialog:after-hide event received\");\n      // If you want to re-initialize chatbot every time the drawer is opened,\n      // set this.initialized to false here.\n      // this.initialized = false;\n    }\n  }\n\n  // Define custom elements\n  if (!window.customElements.get(\"main-chatbot\")) {\n    window.customElements.define(\"main-chatbot\", MainChatbotElement);\n  }\n  if (!window.customElements.get(\"chatbot-drawer\")) {\n    window.customElements.define(\"chatbot-drawer\", ChatbotDrawer);\n  }\n\n  // Initialize the drawer\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const chatbotDrawer = document.getElementById(drawerId);\n    const chatbotTrigger = document.querySelector(\n      `button[aria-controls=\"${drawerId}\"]`\n    );\n    if (chatbotDrawer && chatbotTrigger) {\n      chatbotTrigger.addEventListener(\"click\", () => {\n        chatbotDrawer.show();\n      });\n    } else {\n      console.error(\"Chatbot drawer or trigger not found\");\n    }\n  });\n\n  // Event listeners for drawer open/close events\n  document.addEventListener(\"dialog:after-show\", (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer opened\");\n      // Initialization is handled in ChatbotDrawer's onAfterShow\n    }\n  });\n\n  document.addEventListener(\"dialog:after-hide\", (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer closed\");\n      // Optionally handle post-hide actions\n    }\n  });\n}\n\n// Expose the function to the global scope\nwindow.initChatbotDrawer = initChatbotDrawer;\n\n// Immediately invoke the function if the drawer ID is available\nif (window.chatbotDrawerId) {\n  initChatbotDrawer(window.chatbotDrawerId);\n}\n"],"names":["initChatbotDrawer","drawerId","MainChatbotElement","config","MainChatbot","ChatbotDrawer","Drawer","chatbotDrawer","chatbotTrigger","event"],"mappings":"iOAKA,QAAQ,IAAI,8BAA8B,EAE1C,SAASA,EAAkBC,EAAU,CAEnC,MAAMC,UAA2B,WAAY,CAC3C,aAAc,CACZ,eACKA,EAAmB,WACtBA,EAAmB,SAAW,KAC9B,KAAK,YAAc,MAEdA,EAAmB,QAC3B,CAED,mBAAoB,CAClB,GAAI,CAAC,KAAK,YAAa,CACrB,QAAQ,IAAI,8BAA8B,EAC1C,MAAMC,EAAS,CACb,kBACE,wDACZ,EACQ,KAAK,YAAc,IAAIC,EAAY,KAAMD,CAAM,CAEhD,CACF,CACF,CAGD,MAAME,UAAsBC,CAAO,CACjC,aAAc,CACZ,QACA,KAAK,mBAAqB,KAC1B,KAAK,YAAc,EACpB,CAED,mBAAoB,CAClB,MAAM,kBAAiB,EACvB,KAAK,mBAAqB,KAAK,cAAc,cAAc,EACtD,KAAK,mBAGR,QAAQ,IACN,6CACA,KAAK,kBACf,EALQ,QAAQ,MAAM,wCAAwC,EASxD,KAAK,iBAAiB,oBAAqB,KAAK,YAAY,KAAK,IAAI,CAAC,CACvE,CAED,aAAc,CACZ,QAAQ,IAAI,kCAAkC,EAC1C,KAAK,oBAAsB,CAAC,KAAK,aACnC,QAAQ,IAAI,qCAAqC,EACjD,KAAK,mBAAmB,YAAY,iBACpC,KAAK,YAAc,IACV,KAAK,YACd,QAAQ,IAAI,6BAA6B,EAEzC,QAAQ,MAAM,8CAA8C,CAE/D,CAGD,aAAc,CACZ,QAAQ,IAAI,kCAAkC,CAI/C,CACF,CAGI,OAAO,eAAe,IAAI,cAAc,GAC3C,OAAO,eAAe,OAAO,eAAgBJ,CAAkB,EAE5D,OAAO,eAAe,IAAI,gBAAgB,GAC7C,OAAO,eAAe,OAAO,iBAAkBG,CAAa,EAI9D,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAME,EAAgB,SAAS,eAAeN,CAAQ,EAChDO,EAAiB,SAAS,cAC9B,yBAAyBP,CAAQ,IACvC,EACQM,GAAiBC,EACnBA,EAAe,iBAAiB,QAAS,IAAM,CAC7CD,EAAc,KAAI,CAC1B,CAAO,EAED,QAAQ,MAAM,qCAAqC,CAEzD,CAAG,EAGD,SAAS,iBAAiB,oBAAsBE,GAAU,CACpDA,EAAM,OAAO,KAAOR,GACtB,QAAQ,IAAI,uBAAuB,CAGzC,CAAG,EAED,SAAS,iBAAiB,oBAAsBQ,GAAU,CACpDA,EAAM,OAAO,KAAOR,GACtB,QAAQ,IAAI,uBAAuB,CAGzC,CAAG,CACH,CAGA,OAAO,kBAAoBD,EAGvB,OAAO,iBACTA,EAAkB,OAAO,eAAe"}