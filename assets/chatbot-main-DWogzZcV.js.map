{"version":3,"file":"chatbot-main-DWogzZcV.js","sources":["../frontend/entrypoints/chatbot-main.js"],"sourcesContent":["import { ChatbotCore } from \"./chatbot-core-file.js\";\n\nconsole.log(\"MainChatbot module loading\");\n\nclass MainChatbot {\n  constructor(element, config) {\n    console.log(\"MainChatbot constructor called with config:\", config);\n    this.element = element;\n    this.voiceflowEndpoint = config.voiceflowEndpoint;\n\n    this.core = new ChatbotCore({\n      apiEndpoint: this.voiceflowEndpoint,\n      userIDPrefix: \"mainChatbot\", // Unique prefix\n    });\n    console.log(\"ChatbotCore instance created:\", this.core);\n\n    this.conversationHistory = [];\n    this.hasLaunched =\n      localStorage.getItem(`${this.core.userIDPrefix}_chatHasLaunched`) ===\n      \"true\";\n\n    this.eventListenersAttached = false;\n\n    this.initializeElements();\n    this.setupEventListeners();\n\n    if (this.hasLaunched) {\n      this.loadConversationFromStorage();\n      this.displaySavedConversation();\n    }\n  }\n\n  initializeElements() {\n    console.log(\"MainChatbot initializeElements called\");\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    const typingIndicator = this.element.querySelector(\".chat-typing\");\n    const drawer = this.element.closest(\"x-drawer\");\n    let drawerBody = null;\n\n    if (drawer && drawer.shadowRoot) {\n      drawerBody = drawer.shadowRoot.querySelector('[part=\"body\"]');\n    }\n\n    if (!messageContainer || !typingIndicator || !drawerBody) {\n      console.error(\"Required DOM elements not found\");\n      return;\n    }\n\n    this.core.setDOMElements(messageContainer, typingIndicator, drawerBody);\n    console.log(\"DOM elements set in ChatbotCore:\", this.core);\n  }\n\n  setupEventListeners() {\n    if (this.eventListenersAttached) return;\n\n    console.log(\"MainChatbot setupEventListeners called\");\n    const form = this.element.querySelector(\"#chatForm\");\n    const input = this.element.querySelector(\"#userInput\");\n\n    if (!form || !input) {\n      console.error(\"Chat form or input not found\");\n      return;\n    }\n\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const message = input.value.trim();\n      if (message) {\n        console.log(\"Form submitted with message:\", message);\n        input.value = \"\"; // Clear the input field immediately\n        await this.initializeChatIfNeeded(); // Ensure chat is initialized\n        await this.handleUserMessage(message);\n      }\n    });\n\n    // Add button click event listener\n    this.messageContainer.addEventListener(\"click\", async (e) => {\n      const buttonElement = e.target.closest(\".button\");\n      if (buttonElement) {\n        const buttonData = JSON.parse(buttonElement.dataset.buttonData);\n        console.log(\"Button clicked:\", buttonData);\n        try {\n          const response = await this.core.handleButtonClick(buttonData);\n          await this.handleAgentResponse(response);\n        } catch (error) {\n          console.error(\"Error handling button click:\", error);\n        }\n      }\n    });\n\n    this.eventListenersAttached = true;\n  }\n\n  async initializeChatIfNeeded() {\n    if (!this.chatInitialized) {\n      console.log(\"Initializing main chatbot\");\n      await this.initializeChat();\n      this.chatInitialized = true;\n    }\n  }\n\n  async initializeChat() {\n    console.log(\"Initializing chat\");\n    if (!this.hasLaunched) {\n      console.log(\"Initializing chat for the first time\");\n      await this.sendLaunch();\n      this.hasLaunched = true;\n      localStorage.setItem(`${this.core.userIDPrefix}_chatHasLaunched`, \"true\");\n    }\n    console.log(\"Chat initialized\");\n  }\n\n  async sendLaunch(payload = {}) {\n    console.log(\"Sending main chatbot launch request\");\n\n    const interactPayload = {\n      userAction: {\n        type: \"launch\",\n      },\n    };\n\n    try {\n      const response = await this.core.sendLaunch(interactPayload);\n      await this.handleAgentResponse(response);\n      this.saveConversationToStorage();\n    } catch (error) {\n      console.error(\"Error in main chatbot send launch:\", error);\n    }\n  }\n\n  async handleUserMessage(message) {\n    this.core.addMessage(\"user\", message);\n    this.conversationHistory.push({ type: \"user\", message: message });\n    this.saveConversationToStorage();\n\n    this.core.showTypingIndicator();\n    try {\n      const response = await this.core.sendMessage(message);\n      console.log(\"Response from sendMessage:\", response);\n      await this.handleAgentResponse(response);\n    } catch (error) {\n      console.error(\"Error in send message:\", error);\n    } finally {\n      this.core.hideTypingIndicator();\n      this.core.scrollToBottom();\n    }\n  }\n\n  async handleAgentResponse(response) {\n    console.log(\"Handling agent response:\", response);\n    for (const trace of response) {\n      if (trace.type === \"RedirectToProduct\") {\n        const productHandle = trace.payload?.body?.productHandle;\n        if (productHandle) {\n          this.handleProductRedirect(productHandle);\n          return;\n        }\n      } else if (trace.type === \"text\") {\n        this.core.addMessage(\"assistant\", trace.payload.message);\n        this.conversationHistory.push({\n          type: \"assistant\",\n          message: trace.payload.message,\n        });\n      } else if (trace.type === \"choice\") {\n        this.core.addButtons(trace.payload.buttons);\n        this.conversationHistory.push({\n          type: \"choice\",\n          buttons: trace.payload.buttons,\n        });\n      } else if (trace.type === \"carousel\") {\n        this.addCarousel(trace.payload);\n        this.conversationHistory.push({\n          type: \"carousel\",\n          payload: trace.payload,\n        });\n      } else {\n        console.log(\"Unknown trace type:\", trace.type);\n      }\n    }\n    this.saveConversationToStorage();\n    this.core.scrollToBottom();\n  }\n\n  loadConversationFromStorage() {\n    const savedConversation = localStorage.getItem(\n      `${this.core.userIDPrefix}_chatConversation`\n    );\n    this.conversationHistory = savedConversation\n      ? JSON.parse(savedConversation)\n      : [];\n    console.log(\"Loaded conversation from storage:\", this.conversationHistory);\n  }\n\n  saveConversationToStorage() {\n    localStorage.setItem(\n      `${this.core.userIDPrefix}_chatConversation`,\n      JSON.stringify(this.conversationHistory)\n    );\n    console.log(\"Saved conversation to storage\");\n  }\n\n  displaySavedConversation() {\n    console.log(\"Displaying saved conversation\");\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    if (messageContainer) {\n      messageContainer.innerHTML = \"\"; // Clear existing messages\n      this.conversationHistory.forEach((turn) => {\n        if (turn.type === \"user\" || turn.type === \"assistant\") {\n          this.core.addMessage(\n            turn.type === \"user\" ? \"user\" : \"assistant\",\n            turn.message\n          );\n        } else if (turn.type === \"choice\") {\n          this.core.addButtons(turn.buttons);\n        } else if (turn.type === \"carousel\") {\n          this.addCarousel(turn.payload);\n        }\n      });\n      this.core.scrollToBottom();\n    } else {\n      console.error(\"Message container not found\");\n    }\n  }\n\n  /// < Redirect Custom Action > ////\n\n  handleProductRedirect(productHandle) {\n    if (!productHandle) {\n      console.error(\"Cannot redirect: Product handle is undefined or empty\");\n      return;\n    }\n\n    const baseUrl = \"https://www.sherpapower.co.uk/products/\";\n    const productUrl = `${baseUrl}${encodeURIComponent(productHandle)}`;\n    console.log(`Redirecting to product page: ${productUrl}`);\n    window.location.href = productUrl;\n  }\n\n  async handleAgentResponse(response) {\n    console.log(\"Handling agent response:\", response);\n    for (const trace of response) {\n      if (trace.type === \"RedirectToProduct\") {\n        const productHandle = trace.payload?.body?.productHandle;\n        if (productHandle) {\n          this.handleProductRedirect(productHandle);\n          return;\n        }\n      } else if (trace.type === \"text\") {\n        this.core.addMessage(\"assistant\", trace.payload.message);\n        this.conversationHistory.push({\n          type: \"assistant\",\n          message: trace.payload.message,\n        });\n      } else if (trace.type === \"choice\") {\n        this.core.addButtons(trace.payload.buttons);\n      } else if (trace.type === \"carousel\") {\n        this.addCarousel(trace.payload);\n      } else {\n        console.log(\"Unknown trace type:\", trace.type);\n      }\n    }\n    this.saveConversationToStorage();\n    this.core.scrollToBottom();\n  }\n\n  // < Carousel JS > //\n\n  addCarousel(carouselData) {\n    console.log(\"Adding carousel:\", carouselData);\n    const carouselElement = document.createElement(\"div\");\n    carouselElement.className = \"carousel\";\n    carouselElement.innerHTML = `\n      <div class=\"carousel__container\">\n        <!-- Carousel items will be dynamically added here -->\n      </div>\n      <button class=\"carousel__button carousel__button--left\" aria-label=\"Previous slide\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15 18L9 12L15 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n      <button class=\"carousel__button carousel__button--right\" aria-label=\"Next slide\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n    `;\n\n    const carousel = new Carousel(carouselElement);\n\n    carouselData.cards.forEach((card, index) => {\n      const itemContent = `\n        <div class=\"carousel__item-wrapper\">\n          <div class=\"carousel__item-content\">\n            <img src=\"${card.imageUrl}\" alt=\"${card.title}\" class=\"carousel__item-image\">\n            <h6 class=\"carousel__item-title\">${card.title}</h6>\n            <p class=\"carousel__item-description\">${card.description.text}</p>\n            <button class=\"button carousel__item-button\" data-button-index=\"${index}\">${card.buttons[0].name}</button>\n          </div>\n        </div>\n      `;\n\n      carousel.addItem(itemContent);\n    });\n\n    const buttons = carouselElement.querySelectorAll(\".carousel__item-button\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", async () => {\n        const cardIndex = Math.floor(\n          index / carouselData.cards[0].buttons.length\n        );\n        const buttonIndex = index % carouselData.cards[0].buttons.length;\n        const buttonData = carouselData.cards[cardIndex].buttons[buttonIndex];\n        try {\n          // Remove the carousel element\n          carouselElement.remove();\n\n          const response = await this.core.handleButtonClick(buttonData);\n          await this.handleAgentResponse(response);\n        } catch (error) {\n          console.error(\"Error handling carousel button click:\", error);\n        }\n      });\n    });\n\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    if (messageContainer) {\n      messageContainer.appendChild(carouselElement);\n      this.core.scrollToBottom();\n    } else {\n      console.error(\"Message container not found when adding carousel\");\n    }\n  }\n}\n\nclass Carousel {\n  constructor(element) {\n    this.element = element;\n    this.container = element.querySelector(\".carousel__container\");\n    this.leftButton = element.querySelector(\".carousel__button--left\");\n    this.rightButton = element.querySelector(\".carousel__button--right\");\n    this.items = [];\n    this.currentIndex = 0;\n\n    this.mediaQuery = window.matchMedia(\"(min-width: 1000px)\");\n    this.isDesktop = this.mediaQuery.matches;\n\n    this.leftButton.addEventListener(\"click\", () => this.move(\"left\"));\n    this.rightButton.addEventListener(\"click\", () => this.move(\"right\"));\n\n    this.mediaQuery.addListener(this.handleMediaQueryChange.bind(this));\n  }\n\n  handleMediaQueryChange(e) {\n    this.isDesktop = e.matches;\n    this.currentIndex = 0;\n    this.updatePosition();\n    this.updateVisibility();\n  }\n\n  addItem(content) {\n    const item = document.createElement(\"div\");\n    item.className = \"carousel__item\";\n    item.innerHTML = content;\n    this.container.appendChild(item);\n    this.items.push(item);\n    this.updateVisibility();\n  }\n\n  move(direction) {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    if (direction === \"left\") {\n      this.currentIndex = Math.max(0, this.currentIndex - itemsPerSlide);\n    } else {\n      this.currentIndex = Math.min(\n        this.items.length - itemsPerSlide,\n        this.currentIndex + itemsPerSlide\n      );\n    }\n    this.updatePosition();\n    this.updateVisibility();\n  }\n\n  updatePosition() {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    const offset = -(this.currentIndex / itemsPerSlide) * 100;\n    this.container.style.transform = `translateX(${offset}%)`;\n  }\n\n  updateVisibility() {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    this.leftButton.style.display = this.currentIndex === 0 ? \"none\" : \"flex\";\n    this.rightButton.style.display =\n      this.currentIndex >= this.items.length - itemsPerSlide ? \"none\" : \"flex\";\n  }\n}\n\nconsole.log(\"MainChatbot module loaded\");\n\nexport default MainChatbot;\n"],"names":["MainChatbot","element","config","ChatbotCore","messageContainer","typingIndicator","drawer","drawerBody","form","input","e","message","buttonElement","buttonData","response","error","payload","interactPayload","trace","productHandle","_b","_a","savedConversation","turn","productUrl","carouselData","carouselElement","carousel","Carousel","card","index","itemContent","button","cardIndex","buttonIndex","content","item","direction","itemsPerSlide","offset"],"mappings":"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"}