{"version":3,"file":"chatbot-api.BmWGMfIO.js","sources":["../frontend/entrypoints/chatbot-api.js"],"sourcesContent":["export class ApiClient {\n  constructor(config) {\n    this.apiEndpoint = config.apiEndpoint;\n    this.streamingEndpoint =\n      \"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming\";\n    this.userID = this.generateUserID(config.userIDPrefix || \"chatbot\");\n  }\n\n  generateUserID(prefix) {\n    const storedID = localStorage.getItem(`${prefix}_userID`);\n    if (storedID) return storedID;\n\n    const newID = `${prefix}_${Date.now()}_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n    localStorage.setItem(`${prefix}_userID`, newID);\n    return newID;\n  }\n\n  async streamInteract(message) {\n    console.log(\"Streaming interaction with message:\", message);\n    const url = new URL(this.streamingEndpoint);\n    url.searchParams.append(\"userID\", this.userID);\n\n    const payload = {\n      action: {\n        type: \"text\",\n        payload: message,\n      },\n      userID: this.userID,\n      config: {\n        tts: false,\n        stripSSML: true,\n      },\n    };\n\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(payload),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return response;\n    } catch (error) {\n      console.error(\"Error in stream interact:\", error);\n      throw error;\n    }\n  }\n\n  async gadgetInteract(message) {\n    console.log(\"Gadget interaction with message:\", message);\n    try {\n      const response = await fetch(this.apiEndpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          message,\n          userID: this.userID,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error(\"Error in gadget interact:\", error);\n      throw error;\n    }\n  }\n}\n"],"names":["ApiClient","config","prefix","storedID","newID","message","url","payload","response","error"],"mappings":"AAAO,MAAMA,CAAU,CACrB,YAAYC,EAAQ,CAClB,KAAK,YAAcA,EAAO,YAC1B,KAAK,kBACH,gFACF,KAAK,OAAS,KAAK,eAAeA,EAAO,cAAgB,SAAS,CACnE,CAED,eAAeC,EAAQ,CACrB,MAAMC,EAAW,aAAa,QAAQ,GAAGD,CAAM,SAAS,EACxD,GAAIC,EAAU,OAAOA,EAErB,MAAMC,EAAQ,GAAGF,CAAM,IAAI,KAAK,KAAK,IAAI,KAAK,OAAQ,EACnD,SAAS,EAAE,EACX,OAAO,EAAG,CAAC,CAAC,GACf,oBAAa,QAAQ,GAAGA,CAAM,UAAWE,CAAK,EACvCA,CACR,CAED,MAAM,eAAeC,EAAS,CAC5B,QAAQ,IAAI,sCAAuCA,CAAO,EAC1D,MAAMC,EAAM,IAAI,IAAI,KAAK,iBAAiB,EAC1CA,EAAI,aAAa,OAAO,SAAU,KAAK,MAAM,EAE7C,MAAMC,EAAU,CACd,OAAQ,CACN,KAAM,OACN,QAASF,CACV,EACD,OAAQ,KAAK,OACb,OAAQ,CACN,IAAK,GACL,UAAW,EACZ,CACP,EAEI,GAAI,CACF,MAAMG,EAAW,MAAM,MAAMF,EAAK,CAChC,OAAQ,OACR,QAAS,CACP,eAAgB,kBACjB,EACD,KAAM,KAAK,UAAUC,CAAO,CACpC,CAAO,EAED,GAAI,CAACC,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAOA,CACR,OAAQC,EAAO,CACd,cAAQ,MAAM,4BAA6BA,CAAK,EAC1CA,CACP,CACF,CAED,MAAM,eAAeJ,EAAS,CAC5B,QAAQ,IAAI,mCAAoCA,CAAO,EACvD,GAAI,CACF,MAAMG,EAAW,MAAM,MAAM,KAAK,YAAa,CAC7C,OAAQ,OACR,QAAS,CACP,eAAgB,kBACjB,EACD,KAAM,KAAK,UAAU,CACnB,QAAAH,EACA,OAAQ,KAAK,MACvB,CAAS,CACT,CAAO,EAED,GAAI,CAACG,EAAS,GACZ,MAAM,IAAI,MAAM,uBAAuBA,EAAS,MAAM,EAAE,EAG1D,OAAO,MAAMA,EAAS,MACvB,OAAQC,EAAO,CACd,cAAQ,MAAM,4BAA6BA,CAAK,EAC1CA,CACP,CACF,CACH"}