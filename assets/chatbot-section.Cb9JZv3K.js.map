{"version":3,"file":"chatbot-section.Cb9JZv3K.js","sources":["../frontend/entrypoints/chatbot-section.js"],"sourcesContent":["// chatbot-section.js\n\nimport { ChatbotBase } from \"./chatbot-base.js\";\n\nclass SectionChatbot extends HTMLElement {\n  constructor() {\n    super();\n    console.log(\"SectionChatbot constructor called\");\n\n    // Create a config for ChatbotBase\n    const config = {\n      apiEndpoint:\n        \"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming\",\n      userIDPrefix: \"sectionChatbot\",\n      isSection: true,\n    };\n\n    // Instantiate the chatbot logic\n    this.chatbotBase = new ChatbotBase(config);\n    console.log(\"ChatbotBase created with config:\", config);\n\n    // Set element reference\n    this.chatbotBase.element = this;\n    console.log(\"Element reference set on ChatbotBase\");\n\n    // Initialize state\n    this.chatInitialized = false;\n    this.eventListenersAttached = false;\n    this.savedDevices = new Map();\n    this.initialized = false;\n\n    // Create observer for template content\n    this.observer = new MutationObserver((mutations) => {\n      if (this.querySelector(\".chatbot-container\") && !this.initialized) {\n        console.log(\"Template content detected, initializing\");\n        this.observer.disconnect();\n        this.initialize();\n      }\n    });\n  }\n\n  connectedCallback() {\n    console.log(\"SectionChatbot connected, starting observer\");\n    // Start observing for template content\n    this.observer.observe(this, { childList: true, subtree: true });\n\n    // Check if template is already present\n    if (this.querySelector(\".chatbot-container\")) {\n      console.log(\"Template already present, initializing immediately\");\n      this.observer.disconnect();\n      this.initialize();\n    }\n  }\n\n  initialize() {\n    if (this.initialized) {\n      console.log(\"SectionChatbot already initialized\");\n      return;\n    }\n    console.log(\"SectionChatbot initializing\");\n\n    this.initializeElements();\n    if (!this.validateElements()) {\n      console.error(\"Required elements not found after template rendering\");\n      return;\n    }\n\n    this.setupEventListeners();\n    this.loadSavedDevices();\n    this.setupViewMoreButton();\n    this.chatbotBase.setDOMElements(\n      this.messageContainer,\n      this.typingIndicator,\n      this.chatMessages // Correctly reference chatMessages\n    );\n    this.chatbotBase.initializeChatIfNeeded();\n    this.initialized = true;\n  }\n\n  initializeElements() {\n    console.log(\"SectionChatbot initializeElements called\");\n\n    // Find elements within the chatbot template structure\n    this.messageContainer = this.querySelector(\".message-container\");\n    this.typingIndicator = this.querySelector(\".chat-typing\");\n    this.chatForm = this.querySelector(\"#chatForm\");\n    this.userInput = this.querySelector(\"#userInput\");\n    this.chatMessages = this.querySelector(\".chat-messages\"); // Correctly select within section\n    this.applicationsGrid = document.querySelector(\".applications-grid\");\n\n    // Log DOM structure for debugging\n    console.log(\"Section chatbot DOM structure:\", {\n      innerHTML: this.innerHTML,\n      outerHTML: this.outerHTML,\n    });\n\n    // Log all found elements for debugging\n    console.log(\"Section chatbot elements found:\", {\n      messageContainer: this.messageContainer,\n      typingIndicator: this.typingIndicator,\n      chatForm: this.chatForm,\n      userInput: this.userInput,\n      chatMessages: this.chatMessages,\n      applicationsGrid: this.applicationsGrid,\n    });\n  }\n\n  validateElements() {\n    const requiredElements = {\n      messageContainer: this.messageContainer,\n      typingIndicator: this.typingIndicator,\n      chatForm: this.chatForm,\n      userInput: this.userInput,\n      chatMessages: this.chatMessages,\n    };\n\n    const missingElements = Object.entries(requiredElements)\n      .filter(([, el]) => !el)\n      .map(([name]) => name);\n\n    if (missingElements.length > 0) {\n      console.error(\"Missing required elements:\", missingElements);\n      return false;\n    }\n\n    console.log(\"All required elements found\");\n    return true;\n  }\n\n  setupEventListeners() {\n    if (this.eventListenersAttached) return;\n    console.log(\"SectionChatbot setupEventListeners called\");\n\n    // Initialize chat when user focuses on the input\n    this.userInput.addEventListener(\"focus\", () => {\n      console.log(\"Input focused, initializing chat if needed\");\n      this.initializeChat();\n    });\n\n    // Handle form submission\n    this.chatForm.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const message = this.userInput.value.trim();\n      if (message) {\n        console.log(\"Form submitted with message:\", message);\n        this.userInput.value = \"\"; // Clear input\n        await this.initializeChat();\n        await this.handleUserMessage(message);\n      }\n    });\n\n    // Handle button clicks within messages\n    this.messageContainer.addEventListener(\"click\", async (e) => {\n      const buttonElement = e.target.closest(\".chat-button\");\n      if (buttonElement && buttonElement.dataset.buttonData) {\n        try {\n          const buttonData = JSON.parse(buttonElement.dataset.buttonData);\n          console.log(\"Button clicked:\", buttonData);\n          await this.handleButtonClick(buttonData);\n        } catch (error) {\n          console.error(\"Error parsing button data:\", error);\n        }\n      }\n    });\n\n    this.eventListenersAttached = true;\n  }\n\n  async initializeChat() {\n    if (this.chatInitialized) {\n      console.log(\"Chat already initialized\");\n      return;\n    }\n\n    console.log(\"Initializing section chatbot\");\n    const productDetails = this.getProductDetails();\n\n    try {\n      await this.chatbotBase.sendLaunch(\"shopifySection\", productDetails);\n      this.chatInitialized = true;\n      console.log(\"Section chatbot initialized\");\n    } catch (error) {\n      console.error(\"Error initializing section chatbot:\", error);\n      this.chatbotBase.ui.addMessage(\n        \"assistant\",\n        \"I apologize, but I encountered an error initializing the chat. Please try again.\"\n      );\n    }\n  }\n\n  getProductDetails() {\n    const productTitle = this.getAttribute(\"product-title\") || \"\";\n    const productCapacity = this.getAttribute(\"product-capacity\") || \"\";\n    const acOutputContinuousPower =\n      parseFloat(this.getAttribute(\"product-ac_output_continuous_power\")) || 0;\n    const acOutputPeakPower =\n      parseFloat(this.getAttribute(\"product-ac_output_peak_power\")) || 0;\n    const dcOutputPower =\n      parseFloat(this.getAttribute(\"product-dc_output_power\")) || 0;\n\n    const productDetails = {\n      title: productTitle,\n      capacity: productCapacity,\n      ac_output_continuous_power: acOutputContinuousPower,\n      ac_output_peak_power: acOutputPeakPower,\n      dc_output_power: dcOutputPower,\n    };\n\n    console.log(\"Product details gathered:\", productDetails);\n    return JSON.stringify(productDetails);\n  }\n\n  async handleUserMessage(message) {\n    try {\n      await this.chatbotBase.sendMessage(message);\n    } catch (error) {\n      console.error(\"Error in handleUserMessage:\", error);\n      this.chatbotBase.ui.addMessage(\n        \"assistant\",\n        \"I apologize, but I encountered an error processing your message. Please try again.\"\n      );\n    }\n  }\n\n  async handleButtonClick(buttonData) {\n    try {\n      await this.chatbotBase.handleButtonClick(buttonData);\n    } catch (error) {\n      console.error(\"Error in handleButtonClick:\", error);\n      this.chatbotBase.ui.addMessage(\n        \"assistant\",\n        \"I apologize, but I encountered an error processing your selection. Please try again.\"\n      );\n    }\n  }\n\n  async handleSpecialTrace(trace) {\n    console.log(\"SectionChatbot handling special trace:\", trace);\n    await this.chatbotBase.handleSpecialTrace(trace);\n\n    if (trace.type === \"device_answer\") {\n      await this.handleDeviceAnswer(trace.payload);\n    }\n  }\n\n  async handleDeviceAnswer(deviceAnswer) {\n    console.log(\"Handling device answer:\", deviceAnswer);\n    let devices = Array.isArray(deviceAnswer)\n      ? deviceAnswer\n      : deviceAnswer.devices;\n\n    if (!Array.isArray(devices)) {\n      console.error(\"Invalid devices data:\", devices);\n      return;\n    }\n\n    devices.forEach((device) => {\n      console.log(\"Processing device:\", device);\n      const { name, estimatedRuntime } = device;\n      this.saveDeviceEstimate({ name, estimatedRuntime });\n      const card = this.createDeviceCard(device);\n      this.insertCard(card);\n    });\n\n    try {\n      this.updateDevicesView();\n    } catch (error) {\n      console.error(\"Error in updateDevicesView:\", error);\n    }\n  }\n\n  createDeviceCard(device) {\n    const formattedRuntime = this.formatRuntime(device.estimatedRuntime);\n    const card = document.createElement(\"div\");\n    card.className = \"application-card chatbot-card\";\n    card.innerHTML = `\n      <div class=\"appliance-card__circle\">\n        <img src=\"${device.icon || \"\"}\" alt=\"${\n      device.name\n    }\" class=\"application-card__image\">\n      </div>\n      <div class=\"application-card__content\">\n        <p class=\"application-card__title\">${device.name}</p>\n        <p class=\"application-card__runtime\">${formattedRuntime}</p>\n      </div>\n    `;\n    return card;\n  }\n\n  formatRuntime(hours) {\n    if (hours >= 24) {\n      const days = Math.floor(hours / 24);\n      return `${days} day${days > 1 ? \"s\" : \"\"}`;\n    }\n    return `${Math.round(hours * 10) / 10} hours`;\n  }\n\n  insertCard(card) {\n    if (this.applicationsGrid) {\n      this.applicationsGrid.appendChild(card);\n    } else {\n      console.error(\"Applications grid not found\");\n    }\n  }\n\n  saveDeviceEstimate(device) {\n    this.savedDevices.set(device.name, device);\n    this.saveDevicesToStorage();\n  }\n\n  loadSavedDevices() {\n    try {\n      const savedDevicesJson = localStorage.getItem(\"savedDevices\");\n      if (savedDevicesJson) {\n        const devices = JSON.parse(savedDevicesJson);\n        this.savedDevices = new Map(Object.entries(devices));\n        this.updateDevicesView();\n      }\n    } catch (error) {\n      console.error(\"Error loading saved devices:\", error);\n    }\n  }\n\n  saveDevicesToStorage() {\n    try {\n      const devicesObject = Object.fromEntries(this.savedDevices);\n      localStorage.setItem(\"savedDevices\", JSON.stringify(devicesObject));\n    } catch (error) {\n      console.error(\"Error saving devices to storage:\", error);\n    }\n  }\n\n  updateDevicesView() {\n    if (!this.applicationsGrid) {\n      console.error(\"Applications grid not found\");\n      return;\n    }\n\n    // Clear existing chatbot cards\n    const existingCards =\n      this.applicationsGrid.querySelectorAll(\".chatbot-card\");\n    existingCards.forEach((card) => card.remove());\n\n    // Add saved devices\n    this.savedDevices.forEach((device) => {\n      const card = this.createDeviceCard(device);\n      this.insertCard(card);\n    });\n  }\n\n  setupViewMoreButton() {\n    const viewMoreButton = this.querySelector(\".view-more-button\"); // Correctly scoped\n    if (viewMoreButton) {\n      viewMoreButton.addEventListener(\"click\", () => {\n        this.applicationsGrid.classList.toggle(\"show-all\");\n        viewMoreButton.textContent = this.applicationsGrid.classList.contains(\n          \"show-all\"\n        )\n          ? \"View Less\"\n          : \"View More\";\n      });\n    }\n  }\n}\n\ncustomElements.define(\"section-chatbot\", SectionChatbot);\nconsole.log(\"SectionChatbot module loaded\");\n"],"names":["SectionChatbot","config","ChatbotBase","mutations","requiredElements","missingElements","el","name","e","message","buttonElement","buttonData","error","productDetails","productTitle","productCapacity","acOutputContinuousPower","acOutputPeakPower","dcOutputPower","trace","deviceAnswer","devices","device","estimatedRuntime","card","formattedRuntime","hours","days","savedDevicesJson","devicesObject","viewMoreButton"],"mappings":"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"}