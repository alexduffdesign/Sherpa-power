{"version":3,"file":"chatbot-drawer-mEu6TPXt.js","sources":["../frontend/entrypoints/chatbot-drawer.js"],"sourcesContent":["import { Drawer } from \"./theme.js\";\nimport MainChatbot from \"./chatbot-main.js\";\n\nconsole.log(\"Chatbot drawer script loaded\");\n\nfunction initChatbotDrawer(drawerId) {\n  // Define the MainChatbot custom element\n  class MainChatbotElement extends HTMLElement {\n    constructor() {\n      super();\n      this.mainChatbot = null;\n    }\n\n    connectedCallback() {\n      if (!this.mainChatbot) {\n        console.log(\"MainChatbotElement connected\");\n        const config = {\n          voiceflowEndpoint:\n            \"https://chatbottings--development.gadget.app/voiceflow\",\n        };\n        this.mainChatbot = new MainChatbot(this, config);\n        this.loadPreviousConversation();\n      }\n    }\n\n    loadPreviousConversation() {\n      if (this.mainChatbot) {\n        this.mainChatbot.loadConversationFromStorage();\n      }\n    }\n\n    async initializeNewChat() {\n      console.log(\"MainChatbotElement initializeNewChat called\");\n      if (this.mainChatbot) {\n        await this.mainChatbot.initializeNewChat();\n      } else {\n        console.error(\n          \"MainChatbot not initialized when trying to initialize new chat\"\n        );\n      }\n    }\n  }\n\n  // Define the ChatbotDrawer class\n  class ChatbotDrawer extends Drawer {\n    constructor() {\n      super();\n      this.mainChatbotElement = null;\n      this.initialized = false;\n    }\n\n    connectedCallback() {\n      super.connectedCallback();\n      this.mainChatbotElement = this.querySelector(\"main-chatbot\");\n      if (!this.mainChatbotElement) {\n        console.error(\"MainChatbotElement not found in ChatbotDrawer\");\n      }\n    }\n\n    async show() {\n      super.show();\n      if (this.mainChatbotElement) {\n        if (!this.initialized) {\n          console.log(\"Initializing new chat\");\n          await this.mainChatbotElement.initializeNewChat();\n          this.initialized = true;\n        } else {\n          console.log(\"Chat already initialized\");\n        }\n      } else {\n        console.error(\"MainChatbot not found when trying to show drawer\");\n      }\n    }\n  }\n\n  // Define custom elements\n  customElements.define(\"main-chatbot\", MainChatbotElement);\n  customElements.define(\"chatbot-drawer\", ChatbotDrawer);\n\n  // Initialize the drawer\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const chatbotDrawer = document.getElementById(drawerId);\n    const chatbotTrigger = document.querySelector(\n      `button[aria-controls=\"${drawerId}\"]`\n    );\n    if (chatbotDrawer && chatbotTrigger) {\n      chatbotTrigger.addEventListener(\"click\", async () => {\n        await chatbotDrawer.show();\n      });\n    } else {\n      console.error(\"Chatbot drawer or trigger not found\");\n    }\n  });\n\n  // Event listeners for drawer open/close events\n  document.addEventListener(\"dialog:after-show\", async (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer opened\");\n      const chatbotDrawer = document.getElementById(drawerId);\n      if (chatbotDrawer) {\n        const mainChatbotElement = chatbotDrawer.querySelector(\"main-chatbot\");\n        if (mainChatbotElement) {\n          const hasLaunched =\n            localStorage.getItem(\"chatHasLaunched\") === \"true\";\n          if (!hasLaunched) {\n            console.log(\"First time opening chatbot, initializing new chat\");\n            await mainChatbotElement.initializeNewChat();\n          } else {\n            console.log(\"Chatbot has been launched before\");\n          }\n        } else {\n          console.error(\"MainChatbot element not found in drawer\");\n        }\n      } else {\n        console.error(\"Chatbot drawer not found\");\n      }\n    }\n  });\n\n  document.addEventListener(\"dialog:after-hide\", (event) => {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer closed\");\n    }\n  });\n}\n\n// Expose the function to the global scope\nwindow.initChatbotDrawer = initChatbotDrawer;\n\n// Immediately invoke the function if the drawer ID is available\nif (window.chatbotDrawerId) {\n  initChatbotDrawer(window.chatbotDrawerId);\n}\n"],"names":["initChatbotDrawer","drawerId","MainChatbotElement","config","MainChatbot","ChatbotDrawer","Drawer","chatbotDrawer","chatbotTrigger","event","mainChatbotElement"],"mappings":"iOAGA,QAAQ,IAAI,8BAA8B,EAE1C,SAASA,EAAkBC,EAAU,CAEnC,MAAMC,UAA2B,WAAY,CAC3C,aAAc,CACZ,QACA,KAAK,YAAc,IACpB,CAED,mBAAoB,CAClB,GAAI,CAAC,KAAK,YAAa,CACrB,QAAQ,IAAI,8BAA8B,EAC1C,MAAMC,EAAS,CACb,kBACE,wDACZ,EACQ,KAAK,YAAc,IAAIC,EAAY,KAAMD,CAAM,EAC/C,KAAK,yBAAwB,CAC9B,CACF,CAED,0BAA2B,CACrB,KAAK,aACP,KAAK,YAAY,6BAEpB,CAED,MAAM,mBAAoB,CACxB,QAAQ,IAAI,6CAA6C,EACrD,KAAK,YACP,MAAM,KAAK,YAAY,oBAEvB,QAAQ,MACN,gEACV,CAEK,CACF,CAGD,MAAME,UAAsBC,CAAO,CACjC,aAAc,CACZ,QACA,KAAK,mBAAqB,KAC1B,KAAK,YAAc,EACpB,CAED,mBAAoB,CAClB,MAAM,kBAAiB,EACvB,KAAK,mBAAqB,KAAK,cAAc,cAAc,EACtD,KAAK,oBACR,QAAQ,MAAM,+CAA+C,CAEhE,CAED,MAAM,MAAO,CACX,MAAM,KAAI,EACN,KAAK,mBACF,KAAK,YAKR,QAAQ,IAAI,0BAA0B,GAJtC,QAAQ,IAAI,uBAAuB,EACnC,MAAM,KAAK,mBAAmB,oBAC9B,KAAK,YAAc,IAKrB,QAAQ,MAAM,kDAAkD,CAEnE,CACF,CAGD,eAAe,OAAO,eAAgBJ,CAAkB,EACxD,eAAe,OAAO,iBAAkBG,CAAa,EAGrD,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAME,EAAgB,SAAS,eAAeN,CAAQ,EAChDO,EAAiB,SAAS,cAC9B,yBAAyBP,CAAQ,IACvC,EACQM,GAAiBC,EACnBA,EAAe,iBAAiB,QAAS,SAAY,CACnD,MAAMD,EAAc,MAC5B,CAAO,EAED,QAAQ,MAAM,qCAAqC,CAEzD,CAAG,EAGD,SAAS,iBAAiB,oBAAqB,MAAOE,GAAU,CAC9D,GAAIA,EAAM,OAAO,KAAOR,EAAU,CAChC,QAAQ,IAAI,uBAAuB,EACnC,MAAMM,EAAgB,SAAS,eAAeN,CAAQ,EACtD,GAAIM,EAAe,CACjB,MAAMG,EAAqBH,EAAc,cAAc,cAAc,EACjEG,EAEA,aAAa,QAAQ,iBAAiB,IAAM,OAK5C,QAAQ,IAAI,kCAAkC,GAH9C,QAAQ,IAAI,mDAAmD,EAC/D,MAAMA,EAAmB,qBAK3B,QAAQ,MAAM,yCAAyC,CAEjE,MACQ,QAAQ,MAAM,0BAA0B,CAE3C,CACL,CAAG,EAED,SAAS,iBAAiB,oBAAsBD,GAAU,CACpDA,EAAM,OAAO,KAAOR,GACtB,QAAQ,IAAI,uBAAuB,CAEzC,CAAG,CACH,CAGA,OAAO,kBAAoBD,EAGvB,OAAO,iBACTA,EAAkB,OAAO,eAAe"}