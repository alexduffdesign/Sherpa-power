class a{constructor(e){this.apiEndpoint=e.apiEndpoint,this.streamingEndpoint="https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming",this.userID=this.generateUserID(e.userIDPrefix||"chatbot")}generateUserID(e){const t=localStorage.getItem(`${e}_userID`);if(t)return t;const n=`${e}_${Date.now()}_${Math.random().toString(36).substr(2,9)}`;return localStorage.setItem(`${e}_userID`,n),n}async streamInteract(e,t="text"){console.log("Streaming interaction with message:",e,"type:",t);const n=new URL(this.streamingEndpoint);n.searchParams.append("userID",this.userID);const s={action:{type:t,payload:t==="launch"?void 0:e},userID:this.userID,config:{tts:!1,stripSSML:!0}};try{const r=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Accept:"text/event-stream"},body:JSON.stringify(s)});if(!r.ok)throw new Error(`HTTP error! status: ${r.status}`);return r}catch(r){throw console.error("Error in stream interact:",r),r}}async launch(){return this.streamInteract(null,"launch")}async gadgetInteract(e){console.log("Gadget interaction with message:",e);try{const t=await fetch(this.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e,userID:this.userID})});if(!t.ok)throw new Error(`HTTP error! status: ${t.status}`);return await t.json()}catch(t){throw console.error("Error in gadget interact:",t),t}}}export{a as A};
//# sourceMappingURL=chatbot-api.5HZ4htyK.js.map
