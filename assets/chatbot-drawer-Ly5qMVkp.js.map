{"version":3,"file":"chatbot-drawer-Ly5qMVkp.js","sources":["../frontend/entrypoints/chatbot-drawer.js"],"sourcesContent":["// chatbot-drawer.js\n\nimport MainChatbot from \"./chatbot-main.js\";\n\nconsole.log(\"Chatbot drawer script loaded\");\n\nfunction initChatbotDrawer(drawerId) {\n  // Define the MainChatbot custom element\n  class MainChatbotElement extends HTMLElement {\n    constructor() {\n      super();\n      if (!MainChatbotElement.instance) {\n        MainChatbotElement.instance = this;\n        this.mainChatbot = null;\n      }\n      return MainChatbotElement.instance;\n    }\n\n    connectedCallback() {\n      if (!this.mainChatbot) {\n        console.log(\"MainChatbotElement connected\");\n        const config = {\n          voiceflowEndpoint:\n            \"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow\",\n        };\n        this.mainChatbot = new MainChatbot(this, config);\n        // Removed: this.mainChatbot.initializeChat();\n      }\n    }\n  }\n\n  // Define the MainChatbot custom element if not already defined\n  if (!window.customElements.get(\"main-chatbot\")) {\n    window.customElements.define(\"main-chatbot\", MainChatbotElement);\n  }\n\n  // Listen to 'dialog:after-show' event globally\n  document.addEventListener(\"dialog:after-show\", function (event) {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer opened\");\n      const mainChatbotElement = event.target.querySelector(\"main-chatbot\");\n      if (mainChatbotElement && mainChatbotElement.mainChatbot) {\n        console.log(\"Initializing Chatbot on drawer open\");\n        mainChatbotElement.mainChatbot.initializeChat();\n      } else {\n        console.error(\"mainChatbotElement or mainChatbot not found\");\n      }\n    }\n  });\n\n  // Optionally, listen to 'dialog:after-hide' event\n  document.addEventListener(\"dialog:after-hide\", function (event) {\n    if (event.target.id === drawerId) {\n      console.log(\"Chatbot drawer closed\");\n      // Optionally handle post-hide actions here\n    }\n  });\n\n  // Initialize the drawer trigger\n  document.addEventListener(\"DOMContentLoaded\", () => {\n    const chatbotDrawer = document.getElementById(drawerId);\n    const chatbotTrigger = document.querySelector(\n      `button[aria-controls=\"${drawerId}\"]`\n    );\n    if (chatbotDrawer && chatbotTrigger) {\n      chatbotTrigger.addEventListener(\"click\", () => {\n        chatbotDrawer.show();\n      });\n    } else {\n      console.error(\"Chatbot drawer or trigger not found\");\n    }\n  });\n}\n\n// Expose the function to the global scope\nwindow.initChatbotDrawer = initChatbotDrawer;\n\n// Immediately invoke the function if the drawer ID is available\nif (window.chatbotDrawerId) {\n  initChatbotDrawer(window.chatbotDrawerId);\n}\n"],"names":["initChatbotDrawer","drawerId","MainChatbotElement","config","MainChatbot","event","mainChatbotElement","chatbotDrawer","chatbotTrigger"],"mappings":"uFAIA,QAAQ,IAAI,8BAA8B,EAE1C,SAASA,EAAkBC,EAAU,CAEnC,MAAMC,UAA2B,WAAY,CAC3C,aAAc,CACZ,eACKA,EAAmB,WACtBA,EAAmB,SAAW,KAC9B,KAAK,YAAc,MAEdA,EAAmB,QAC3B,CAED,mBAAoB,CAClB,GAAI,CAAC,KAAK,YAAa,CACrB,QAAQ,IAAI,8BAA8B,EAC1C,MAAMC,EAAS,CACb,kBACE,qEACZ,EACQ,KAAK,YAAc,IAAIC,EAAY,KAAMD,CAAM,CAEhD,CACF,CACF,CAGI,OAAO,eAAe,IAAI,cAAc,GAC3C,OAAO,eAAe,OAAO,eAAgBD,CAAkB,EAIjE,SAAS,iBAAiB,oBAAqB,SAAUG,EAAO,CAC9D,GAAIA,EAAM,OAAO,KAAOJ,EAAU,CAChC,QAAQ,IAAI,uBAAuB,EACnC,MAAMK,EAAqBD,EAAM,OAAO,cAAc,cAAc,EAChEC,GAAsBA,EAAmB,aAC3C,QAAQ,IAAI,qCAAqC,EACjDA,EAAmB,YAAY,kBAE/B,QAAQ,MAAM,6CAA6C,CAE9D,CACL,CAAG,EAGD,SAAS,iBAAiB,oBAAqB,SAAUD,EAAO,CAC1DA,EAAM,OAAO,KAAOJ,GACtB,QAAQ,IAAI,uBAAuB,CAGzC,CAAG,EAGD,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMM,EAAgB,SAAS,eAAeN,CAAQ,EAChDO,EAAiB,SAAS,cAC9B,yBAAyBP,CAAQ,IACvC,EACQM,GAAiBC,EACnBA,EAAe,iBAAiB,QAAS,IAAM,CAC7CD,EAAc,KAAI,CAC1B,CAAO,EAED,QAAQ,MAAM,qCAAqC,CAEzD,CAAG,CACH,CAGA,OAAO,kBAAoBP,EAGvB,OAAO,iBACTA,EAAkB,OAAO,eAAe"}