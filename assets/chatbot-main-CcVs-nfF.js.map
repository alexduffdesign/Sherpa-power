{"version":3,"file":"chatbot-main-CcVs-nfF.js","sources":["../frontend/entrypoints/chatbot-main.js"],"sourcesContent":["// chatbot-main.js\n\nimport { ChatbotCore } from \"./chatbot-core-file.js\";\n\nconsole.log(\"MainChatbot module loading\");\n\nclass MainChatbot {\n  static STATE_ENDPOINT =\n    \"https://chatbottings--development.gadget.app/voiceflow-state\";\n  static START_NODE_ID = \"66e98d214920bd6fefd8ede0\"; // Replace with your actual start node ID\n\n  constructor(element, config) {\n    console.log(\"MainChatbot constructor called with config:\", config);\n    this.element = element;\n    this.voiceflowEndpoint = config.voiceflowEndpoint;\n\n    this.core = new ChatbotCore({\n      apiEndpoint: this.voiceflowEndpoint,\n      userIDPrefix: \"mainChatbot\",\n    });\n    console.log(\"ChatbotCore instance created:\", this.core);\n\n    this.conversationHistory = [];\n    this.hasLaunched = localStorage.getItem(\"chatHasLaunched\") === \"true\";\n\n    this.eventListenersAttached = false;\n\n    this.initializeElements();\n    this.setupEventListeners();\n\n    if (this.hasLaunched) {\n      this.loadConversationFromStorage();\n      this.displaySavedConversation();\n    }\n  }\n\n  initializeElements() {\n    console.log(\"MainChatbot initializeElements called\");\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    const typingIndicator = this.element.querySelector(\".chat-typing\");\n    const drawer = this.element.closest(\"x-drawer\");\n    let drawerBody = null;\n\n    if (drawer && drawer.shadowRoot) {\n      drawerBody = drawer.shadowRoot.querySelector('[part=\"body\"]');\n    }\n\n    if (!messageContainer || !typingIndicator || !drawerBody) {\n      console.error(\"Required DOM elements not found\");\n      return;\n    }\n\n    this.core.setDOMElements(messageContainer, typingIndicator, drawerBody);\n    console.log(\"DOM elements set in ChatbotCore:\", this.core);\n  }\n\n  setupEventListeners() {\n    if (this.eventListenersAttached) return;\n\n    console.log(\"MainChatbot setupEventListeners called\");\n    const form = this.element.querySelector(\"#chatForm\");\n    const input = this.element.querySelector(\"#userInput\");\n\n    if (!form || !input) {\n      console.error(\"Chat form or input not found\");\n      return;\n    }\n\n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const message = input.value.trim();\n      if (message) {\n        console.log(\"Form submitted with message:\", message);\n        input.value = \"\"; // Clear the input field immediately\n        await this.handleUserMessage(message);\n      }\n    });\n\n    this.element.addEventListener(\"click\", async (e) => {\n      if (e.target.matches(\".button-container button\")) {\n        const buttonData = JSON.parse(e.target.dataset.buttonData);\n        try {\n          const response = await this.core.handleButtonClick(buttonData);\n          // Save button click as a message\n          this.conversationHistory.push({\n            type: \"user\",\n            message: buttonData.name,\n          });\n          this.saveConversationToStorage();\n          await this.handleAgentResponse(response);\n        } catch (error) {\n          console.error(\"Error handling button click:\", error);\n        }\n      }\n    });\n\n    const jumpToStartButton = document.querySelector(\".back-to-start\");\n    console.log(\"Jump to start button:\", jumpToStartButton);\n    if (jumpToStartButton) {\n      jumpToStartButton.addEventListener(\"click\", () => this.jumpToStart());\n    } else {\n      console.error(\"Jump to start button not found\");\n    }\n\n    this.eventListenersAttached = true;\n  }\n\n  async initializeChat() {\n    console.log(\"Initializing chat\");\n    if (!this.hasLaunched) {\n      try {\n        console.log(\"Initializing chat for the first time\");\n        await this.sendLaunch();\n        this.hasLaunched = true;\n        localStorage.setItem(\"chatHasLaunched\", \"true\");\n      } catch (error) {\n        console.error(\"Error during chat initialization:\", error);\n      }\n    } else {\n      // Add this else block to handle existing conversations\n      this.loadConversationFromStorage();\n      this.displaySavedConversation();\n    }\n    // Add this line to scroll to the bottom after initialization\n    this.core.scrollToBottom();\n    console.log(\"Chat initialized\");\n  }\n\n  async sendLaunch(payload = {}) {\n    console.log(\"Sending main chatbot launch request\");\n\n    const interactPayload = {\n      userAction: {\n        type: \"launch\",\n      },\n    };\n\n    try {\n      const response = await this.core.sendLaunch(interactPayload);\n      await this.handleAgentResponse(response);\n    } catch (error) {\n      console.error(\"Error in main chatbot send launch:\", error);\n    }\n  }\n\n  async handleUserMessage(message) {\n    this.core.addMessage(\"user\", message);\n    this.conversationHistory.push({ type: \"user\", message: message });\n    this.saveConversationToStorage();\n\n    this.core.showTypingIndicator();\n    try {\n      const response = await this.core.sendMessage(message);\n      console.log(\"Response from sendMessage:\", response);\n      await this.handleAgentResponse(response);\n    } catch (error) {\n      console.error(\"Error in send message:\", error);\n    } finally {\n      this.core.hideTypingIndicator();\n      this.core.scrollToBottom();\n    }\n  }\n\n  loadConversationFromStorage() {\n    const savedConversation = localStorage.getItem(\"chatConversation\");\n    this.conversationHistory = savedConversation\n      ? JSON.parse(savedConversation)\n      : [];\n    console.log(\"Loaded conversation from storage:\", this.conversationHistory);\n  }\n\n  saveConversationToStorage() {\n    localStorage.setItem(\n      \"chatConversation\",\n      JSON.stringify(this.conversationHistory)\n    );\n    console.log(\"Saved conversation to storage\");\n  }\n\n  displaySavedConversation() {\n    console.log(\"Displaying saved conversation\");\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    if (messageContainer) {\n      messageContainer.innerHTML = \"\"; // Clear existing messages\n      this.conversationHistory.forEach((turn, index) => {\n        if (turn.type === \"user\" || turn.type === \"assistant\") {\n          this.core.addMessage(turn.type, turn.message);\n        } else if (turn.type === \"choice\") {\n          // Check if next turn is 'user' type\n          const nextTurn = this.conversationHistory[index + 1];\n          if (!nextTurn || nextTurn.type !== \"user\") {\n            this.core.addButtons(turn.buttons);\n          }\n        } else if (turn.type === \"carousel\") {\n          // Check if next turn is 'user' type\n          const nextTurn = this.conversationHistory[index + 1];\n          if (!nextTurn || nextTurn.type !== \"user\") {\n            this.addCarousel(turn.data);\n          }\n        } else if (turn.type === \"visual\" && turn.data.visualType === \"image\") {\n          this.addVisualImage(turn.data);\n        }\n      });\n      this.core.scrollToBottom();\n    } else {\n      console.error(\"Message container not found\");\n    }\n  }\n\n  /// < Redirect Custom Action > //\n\n  handleProductRedirect(productHandle) {\n    if (!productHandle) {\n      console.error(\"Cannot redirect: Product handle is undefined or empty\");\n      return;\n    }\n\n    const baseUrl = \"https://www.sherpapower.co.uk/products/\";\n    const productUrl = `${baseUrl}${encodeURIComponent(productHandle)}`;\n    console.log(`Redirecting to product page: ${productUrl}`);\n    window.location.href = productUrl;\n  }\n\n  async handleAgentResponse(response) {\n    console.log(\"Handling agent response:\", response);\n    for (const trace of response) {\n      if (trace.type === \"RedirectToProduct\") {\n        const productHandle = trace.payload?.body?.productHandle;\n        if (productHandle) {\n          this.handleProductRedirect(productHandle);\n          return;\n        }\n      } else if (trace.type === \"text\") {\n        this.core.addMessage(\"assistant\", trace.payload.message);\n        this.conversationHistory.push({\n          type: \"assistant\",\n          message: trace.payload.message,\n        });\n      } else if (trace.type === \"choice\") {\n        this.core.addButtons(trace.payload.buttons);\n        this.conversationHistory.push({\n          type: \"choice\",\n          buttons: trace.payload.buttons,\n        });\n      } else if (trace.type === \"carousel\") {\n        this.addCarousel(trace.payload);\n        this.conversationHistory.push({\n          type: \"carousel\",\n          data: trace.payload,\n        });\n      } else if (\n        trace.type === \"visual\" &&\n        trace.payload.visualType === \"image\"\n      ) {\n        this.addVisualImage(trace.payload);\n        this.conversationHistory.push({\n          type: \"visual\",\n          data: trace.payload,\n        });\n      } else {\n        console.log(\"Unknown trace type:\", trace.type);\n      }\n    }\n    this.saveConversationToStorage();\n    this.core.scrollToBottom();\n  }\n\n  addVisualImage(payload) {\n    console.log(\"Adding visual image:\", payload);\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    if (messageContainer) {\n      const imageWrapper = document.createElement(\"div\");\n      imageWrapper.classList.add(\n        \"message-wrapper\",\n        \"message-wrapper--assistant\"\n      );\n\n      const imageElement = document.createElement(\"img\");\n      imageElement.src = payload.image;\n      imageElement.alt = \"Visual content\";\n      imageElement.classList.add(\"chat-image\");\n\n      // Set dimensions if available\n      if (payload.dimensions) {\n        imageElement.width = payload.dimensions.width;\n        imageElement.height = payload.dimensions.height;\n      }\n\n      // Add loading and error handling\n      imageElement.loading = \"lazy\";\n      imageElement.onerror = () => {\n        console.error(\"Failed to load image:\", payload.image);\n        imageElement.alt = \"Failed to load image\";\n      };\n\n      imageWrapper.appendChild(imageElement);\n      messageContainer.appendChild(imageWrapper);\n    } else {\n      console.error(\"Message container not found when adding visual image\");\n    }\n  }\n\n  // < Carousel JS > //\n\n  addCarousel(carouselData) {\n    console.log(\"Adding carousel:\", carouselData);\n    const carouselElement = document.createElement(\"div\");\n    carouselElement.className = \"carousel\";\n    carouselElement.innerHTML = `\n      <div class=\"carousel__container\">\n        <!-- Carousel items will be dynamically added here -->\n      </div>\n      <button class=\"carousel__button carousel__button--left\" aria-label=\"Previous slide\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M15 18L9 12L15 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n      <button class=\"carousel__button carousel__button--right\" aria-label=\"Next slide\">\n        <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M9 18L15 12L9 6\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n        </svg>\n      </button>\n    `;\n\n    const carousel = new Carousel(carouselElement);\n\n    carouselData.cards.forEach((card, index) => {\n      const itemContent = `\n        <div class=\"carousel__item-wrapper\">\n          <div class=\"carousel__item-content\">\n            <img src=\"${card.imageUrl}\" alt=\"${card.title}\" class=\"carousel__item-image\">\n            <h6 class=\"carousel__item-title\">${card.title}</h6>\n            <p class=\"carousel__item-description\">${card.description.text}</p>\n            <button class=\"button carousel__item-button\" data-button-index=\"${index}\">${card.buttons[0].name}</button>\n          </div>\n        </div>\n      `;\n\n      carousel.addItem(itemContent);\n    });\n\n    const buttons = carouselElement.querySelectorAll(\".carousel__item-button\");\n    buttons.forEach((button, index) => {\n      button.addEventListener(\"click\", async () => {\n        const cardIndex = Math.floor(\n          index / carouselData.cards[0].buttons.length\n        );\n        const buttonIndex = index % carouselData.cards[0].buttons.length;\n        const buttonData = carouselData.cards[cardIndex].buttons[buttonIndex];\n        try {\n          // Remove the carousel element\n          carouselElement.remove();\n\n          // Save button click as a message\n          this.conversationHistory.push({\n            type: \"user\",\n            message: buttonData.name,\n          });\n          this.saveConversationToStorage();\n\n          const response = await this.core.handleButtonClick(buttonData);\n          await this.handleAgentResponse(response);\n        } catch (error) {\n          console.error(\"Error handling carousel button click:\", error);\n        }\n      });\n    });\n\n    const messageContainer = this.element.querySelector(\"#messageContainer\");\n    if (messageContainer) {\n      messageContainer.appendChild(carouselElement);\n      this.core.scrollToBottom();\n    } else {\n      console.error(\"Message container not found when adding carousel\");\n    }\n  }\n\n  // User clicks back to start button\n\n  async jumpToStart() {\n    console.log(\"MainChatbot jumpToStart called\");\n    try {\n      await this.updateState(MainChatbot.START_NODE_ID);\n      const response = await this.core.gadgetInteract({ type: \"request\" });\n      await this.handleAgentResponse(response);\n    } catch (error) {\n      console.error(\"Error in main chatbot jump to start:\", error);\n    }\n  }\n\n  async updateState(nodeID) {\n    console.log(`Updating state to jump to node: ${nodeID}`);\n\n    try {\n      const response = await fetch(\n        `${MainChatbot.STATE_ENDPOINT}?userID=${this.core.userID}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ nodeID: nodeID }),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const result = await response.json();\n      console.log(\"State update response:\", result);\n      return result;\n    } catch (error) {\n      console.error(\"Error updating state:\", error);\n      throw error;\n    }\n  }\n}\n\nclass Carousel {\n  constructor(element) {\n    this.element = element;\n    this.container = element.querySelector(\".carousel__container\");\n    this.leftButton = element.querySelector(\".carousel__button--left\");\n    this.rightButton = element.querySelector(\".carousel__button--right\");\n    this.items = [];\n    this.currentIndex = 0;\n\n    this.mediaQuery = window.matchMedia(\"(min-width: 1000px)\");\n    this.isDesktop = this.mediaQuery.matches;\n\n    this.leftButton.addEventListener(\"click\", () => this.move(\"left\"));\n    this.rightButton.addEventListener(\"click\", () => this.move(\"right\"));\n\n    this.mediaQuery.addListener(this.handleMediaQueryChange.bind(this));\n  }\n\n  handleMediaQueryChange(e) {\n    this.isDesktop = e.matches;\n    this.currentIndex = 0;\n    this.updatePosition();\n    this.updateVisibility();\n  }\n\n  addItem(content) {\n    const item = document.createElement(\"div\");\n    item.className = \"carousel__item\";\n    item.innerHTML = content;\n    this.container.appendChild(item);\n    this.items.push(item);\n    this.updateVisibility();\n  }\n\n  move(direction) {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    if (direction === \"left\") {\n      this.currentIndex = Math.max(0, this.currentIndex - itemsPerSlide);\n    } else {\n      this.currentIndex = Math.min(\n        this.items.length - itemsPerSlide,\n        this.currentIndex + itemsPerSlide\n      );\n    }\n    this.updatePosition();\n    this.updateVisibility();\n  }\n\n  updatePosition() {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    const offset = -(this.currentIndex / itemsPerSlide) * 100;\n    this.container.style.transform = `translateX(${offset}%)`;\n  }\n\n  updateVisibility() {\n    const itemsPerSlide = this.isDesktop ? 2 : 1;\n    this.leftButton.style.display = this.currentIndex === 0 ? \"none\" : \"flex\";\n    this.rightButton.style.display =\n      this.currentIndex >= this.items.length - itemsPerSlide ? \"none\" : \"flex\";\n  }\n}\n\nconsole.log(\"MainChatbot module loaded\");\n\nexport default MainChatbot;\n"],"names":["_MainChatbot","element","config","ChatbotCore","messageContainer","typingIndicator","drawer","drawerBody","form","input","e","message","buttonData","response","error","jumpToStartButton","payload","interactPayload","savedConversation","turn","index","nextTurn","productHandle","productUrl","trace","_b","_a","imageWrapper","imageElement","carouselData","carouselElement","carousel","Carousel","card","itemContent","button","cardIndex","buttonIndex","nodeID","result","__publicField","MainChatbot","content","item","direction","itemsPerSlide","offset"],"mappings":"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"}