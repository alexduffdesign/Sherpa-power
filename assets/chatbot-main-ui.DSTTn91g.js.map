{"version":3,"file":"chatbot-main-ui.DSTTn91g.js","sources":["../frontend/mainChatbot/chatbot-main-ui.js"],"sourcesContent":["// /assets/scripts/chatbot/main/chatbot-main-ui.js\n\nimport ChatbotUI from \"../baseChatbot/base-chatbot-ui.js\";\n\n/**\n * MainChatbotUI Class\n * Extends base ChatbotUI with main chatbot specific functionality\n */\nclass MainChatbotUI extends ChatbotUI {\n  /**\n   * @param {Object} config - Configuration object\n   * @param {HTMLElement} config.container - The container element\n   * @param {EventEmitter} config.eventBus - Event bus instance\n   * @param {string} config.type - Type of chatbot\n   */\n  constructor(config) {\n    super(config);\n    this.setupMainChatbotUI();\n  }\n\n  /**\n   * Set up main chatbot specific UI elements\n   * @private\n   */\n  setupMainChatbotUI() {\n    this.footer = this.container.querySelector(\".chatbot-footer\");\n    this.setupFooterControls();\n    this.setupMainMenu();\n  }\n\n  /**\n   * Set up footer controls\n   * @private\n   */\n  setupFooterControls() {\n    if (!this.footer) return;\n\n    // Clear history button\n    const clearButton = this.footer.querySelector(\".clear-history\");\n    if (clearButton) {\n      clearButton.addEventListener(\"click\", () => {\n        this.eventBus.emit(\"clearHistory\");\n      });\n    }\n\n    // Minimize button\n    const minimizeButton = this.footer.querySelector(\".minimize-chatbot\");\n    if (minimizeButton) {\n      minimizeButton.addEventListener(\"click\", () => {\n        this.eventBus.emit(\"minimize\");\n      });\n    }\n  }\n\n  /**\n   * Set up main menu functionality\n   * @private\n   */\n  setupMainMenu() {\n    const menuButton = this.container.querySelector(\".main-menu\");\n    if (menuButton) {\n      menuButton.addEventListener(\"click\", () => {\n        this.eventBus.emit(\"mainMenu\");\n      });\n    }\n  }\n\n  /**\n   * Override base addButtons to add main-specific functionality\n   * @override\n   * @param {Array} buttons - Array of button data\n   * @param {boolean} isRestored - Whether these buttons are being restored from history\n   */\n  addButtons(buttons, isRestored = false) {\n    if (!Array.isArray(buttons)) {\n      console.error(\"Invalid buttons data:\", buttons);\n      return;\n    }\n\n    const buttonGroup = document.createElement(\"div\");\n    buttonGroup.className = \"button-group\";\n\n    buttons.forEach((buttonData) => {\n      const button = document.createElement(\"button-component\");\n      button.setAttribute(\"label\", buttonData.name);\n      button.setAttribute(\"payload\", JSON.stringify(buttonData.request));\n\n      if (isRestored) {\n        button.setAttribute(\"data-restored\", \"true\");\n      }\n\n      buttonGroup.appendChild(button);\n    });\n\n    this.messageContainer.appendChild(buttonGroup);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Override base addCarousel to add main-specific functionality\n   * @override\n   * @param {Array} items - Array of carousel items\n   * @param {boolean} isRestored - Whether this carousel is being restored from history\n   */\n  addCarousel(items, isRestored = false) {\n    if (!Array.isArray(items)) {\n      console.error(\"Invalid carousel items:\", items);\n      return;\n    }\n\n    const carousel = document.createElement(\"carousel-component\");\n    carousel.setAttribute(\"data-carousel\", JSON.stringify({ cards: items }));\n\n    if (isRestored) {\n      carousel.setAttribute(\"data-restored\", \"true\");\n    }\n\n    this.messageContainer.appendChild(carousel);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Clear the chat messages\n   * @public\n   */\n  clearChat() {\n    while (this.messageContainer.firstChild) {\n      this.messageContainer.removeChild(this.messageContainer.firstChild);\n    }\n  }\n\n  /**\n   * Update footer visibility\n   * @public\n   * @param {boolean} visible - Whether footer should be visible\n   */\n  updateFooterVisibility(visible) {\n    if (this.footer) {\n      this.footer.style.display = visible ? \"flex\" : \"none\";\n    }\n  }\n}\n\nexport default MainChatbotUI;\n"],"names":["MainChatbotUI","ChatbotUI","config","clearButton","minimizeButton","menuButton","buttons","isRestored","buttonGroup","buttonData","button","items","carousel","visible"],"mappings":"kDAQA,MAAMA,UAAsBC,CAAU,CAOpC,YAAYC,EAAQ,CAClB,MAAMA,CAAM,EACZ,KAAK,mBAAkB,CACxB,CAMD,oBAAqB,CACnB,KAAK,OAAS,KAAK,UAAU,cAAc,iBAAiB,EAC5D,KAAK,oBAAmB,EACxB,KAAK,cAAa,CACnB,CAMD,qBAAsB,CACpB,GAAI,CAAC,KAAK,OAAQ,OAGlB,MAAMC,EAAc,KAAK,OAAO,cAAc,gBAAgB,EAC1DA,GACFA,EAAY,iBAAiB,QAAS,IAAM,CAC1C,KAAK,SAAS,KAAK,cAAc,CACzC,CAAO,EAIH,MAAMC,EAAiB,KAAK,OAAO,cAAc,mBAAmB,EAChEA,GACFA,EAAe,iBAAiB,QAAS,IAAM,CAC7C,KAAK,SAAS,KAAK,UAAU,CACrC,CAAO,CAEJ,CAMD,eAAgB,CACd,MAAMC,EAAa,KAAK,UAAU,cAAc,YAAY,EACxDA,GACFA,EAAW,iBAAiB,QAAS,IAAM,CACzC,KAAK,SAAS,KAAK,UAAU,CACrC,CAAO,CAEJ,CAQD,WAAWC,EAASC,EAAa,GAAO,CACtC,GAAI,CAAC,MAAM,QAAQD,CAAO,EAAG,CAC3B,QAAQ,MAAM,wBAAyBA,CAAO,EAC9C,MACD,CAED,MAAME,EAAc,SAAS,cAAc,KAAK,EAChDA,EAAY,UAAY,eAExBF,EAAQ,QAASG,GAAe,CAC9B,MAAMC,EAAS,SAAS,cAAc,kBAAkB,EACxDA,EAAO,aAAa,QAASD,EAAW,IAAI,EAC5CC,EAAO,aAAa,UAAW,KAAK,UAAUD,EAAW,OAAO,CAAC,EAE7DF,GACFG,EAAO,aAAa,gBAAiB,MAAM,EAG7CF,EAAY,YAAYE,CAAM,CACpC,CAAK,EAED,KAAK,iBAAiB,YAAYF,CAAW,EAC7C,KAAK,eAAc,CACpB,CAQD,YAAYG,EAAOJ,EAAa,GAAO,CACrC,GAAI,CAAC,MAAM,QAAQI,CAAK,EAAG,CACzB,QAAQ,MAAM,0BAA2BA,CAAK,EAC9C,MACD,CAED,MAAMC,EAAW,SAAS,cAAc,oBAAoB,EAC5DA,EAAS,aAAa,gBAAiB,KAAK,UAAU,CAAE,MAAOD,CAAO,CAAA,CAAC,EAEnEJ,GACFK,EAAS,aAAa,gBAAiB,MAAM,EAG/C,KAAK,iBAAiB,YAAYA,CAAQ,EAC1C,KAAK,eAAc,CACpB,CAMD,WAAY,CACV,KAAO,KAAK,iBAAiB,YAC3B,KAAK,iBAAiB,YAAY,KAAK,iBAAiB,UAAU,CAErE,CAOD,uBAAuBC,EAAS,CAC1B,KAAK,SACP,KAAK,OAAO,MAAM,QAAUA,EAAU,OAAS,OAElD,CACH"}