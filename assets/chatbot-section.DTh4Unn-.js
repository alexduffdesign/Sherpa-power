import{C as i}from"./base-chatbot.k0qY4jyN.js";import{S as r}from"./chatbot-section-ui.BNFXwAfd.js";import"./vendor.DqvJXvYX.js";import"./markdown-util.AcsleJER.js";import"./base-chatbot-ui.XjZQ9FzU.js";class o{constructor(e,t){this.container=e,this.productDetails=t,this.isLaunched=!1,this.initialize(),this.validateProductDetails()}initialize(){this.core=new i({type:"section",endpoint:"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming",userID:this.generateSessionId()}),this.ui=new r({container:this.container,eventBus:this.core.eventBus,type:"section",productDetails:this.productDetails}),this.setupEventListeners(),this.loadStoredDeviceAnswers()}generateSessionId(){return`section_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}validateProductDetails(){const t=["title","capacity"].filter(s=>!this.productDetails[s]);t.length>0&&(console.error("Missing required product details:",t.join(", ")),this.ui.displayError("Some product information is missing. Chat functionality may be limited."))}setupEventListeners(){this.core.eventBus.on("userMessage",t=>{this.ui.addMessage("user",t),this.core.sendMessage(t)}),this.core.eventBus.on("deviceAnswer",t=>{this.handleDeviceAnswer(t)});const e=this.container.querySelector(".chatbot-input");e&&e.addEventListener("focus",()=>{this.isLaunched||this.launch()})}async launch(){if(this.isLaunched){console.log("Section chatbot already launched");return}try{const e=this.sanitizeProductDetails();await this.core.sendLaunch({action:{type:"launch",payload:{startBlock:"shopifySection",powerStationDetails:e}}}),this.isLaunched=!0}catch(e){console.error("Error launching section chatbot:",e),this.ui.displayError("Failed to start the chat. Please try again.")}}handleDeviceAnswer(e){if(console.log("Received device answer:",e),!e||!e.devices){console.warn("Invalid device answer payload:",e);return}const t=this.processDeviceAnswerData(e);this.ui.updateDeviceAnswers(t),this.saveDeviceAnswerToStorage(e)}processDeviceAnswerData(e){return e.devices||[]}sanitizeProductDetails(){return Object.entries(this.productDetails).reduce((e,[t,s])=>(e[t]=s?String(s).trim():"",e),{})}saveDeviceAnswerToStorage(e){const t=`sectionChatbot_${this.productDetails.title}_answers`;let s=JSON.parse(localStorage.getItem(t)||"[]");s.unshift(e),localStorage.setItem(t,JSON.stringify(s))}loadStoredDeviceAnswers(){const e=`sectionChatbot_${this.productDetails.title}_answers`;JSON.parse(localStorage.getItem(e)||"[]").forEach(s=>{this.ui.updateDeviceAnswers(s.devices)})}destroy(){this.core.destroy(),this.ui.destroy()}}window.SectionChatbot=o;
//# sourceMappingURL=chatbot-section.DTh4Unn-.js.map
