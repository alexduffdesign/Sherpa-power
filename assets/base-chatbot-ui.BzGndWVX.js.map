{"version":3,"file":"base-chatbot-ui.BzGndWVX.js","sources":["../frontend/baseChatbot/base-chatbot-ui.js"],"sourcesContent":["// /assets/scripts/chatbot/core/chatbot-ui.js\n\n/**\n * ChatbotUI Class\n * Handles base UI functionality for chatbots\n */\nclass ChatbotUI {\n  /**\n   * @param {Object} config - Configuration object\n   * @param {HTMLElement} config.container - The container element for the chatbot\n   * @param {EventEmitter} config.eventBus - Event bus instance\n   * @param {string} config.type - Type of chatbot ('main' or 'section')\n   */\n  constructor(config) {\n    if (!config.container) {\n      throw new Error(\"ChatbotUI requires a container element\");\n    }\n    if (!config.eventBus) {\n      throw new Error(\"ChatbotUI requires an event bus\");\n    }\n\n    this.container = config.container;\n    this.eventBus = config.eventBus;\n    this.type = config.type;\n\n    this.setupUIElements();\n    this.setupEventListeners();\n  }\n\n  /**\n   * Set up references to UI elements\n   * @private\n   */\n  setupUIElements() {\n    const messageContainers =\n      this.container.querySelectorAll(\".message-container\");\n    this.messageContainer = messageContainers[0];\n    console.log(\"Message container found:\", !!this.messageContainer);\n\n    const forms = this.container.querySelectorAll(\".chat-form\");\n    this.form = forms[0];\n    console.log(\"Chat form found:\", !!this.form);\n\n    const inputs = this.container.querySelectorAll(\".chatbot-input\");\n    this.input = inputs[0];\n    console.log(\"Chat input found:\", !!this.input);\n\n    const typingIndicators = this.container.querySelectorAll(\".chat-typing\");\n    this.typingIndicator = typingIndicators[0];\n    console.log(\"Typing indicator found:\", !!this.typingIndicator);\n\n    this.typingText = this.typingIndicator?.querySelector(\".typing-text\");\n    console.log(\"Typing text found:\", !!this.typingText);\n\n    console.log(\"Container HTML:\", this.container.innerHTML);\n\n    if (!this.messageContainer || !this.form || !this.input) {\n      const missing = [];\n      if (!this.messageContainer) missing.push(\"message-container\");\n      if (!this.form) missing.push(\"chat-form\");\n      if (!this.input) missing.push(\"chatbot-input\");\n      throw new Error(`Required UI elements not found: ${missing.join(\", \")}`);\n    }\n  }\n\n  /**\n   * Set up event listeners for UI interactions\n   * @private\n   */\n  setupEventListeners() {\n    // Handle form submissions\n    this.form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      const message = this.input.value.trim();\n      if (message) {\n        // Emit a 'userMessage' event. The ChatbotCore will handle the logic and respond.\n        this.eventBus.emit(\"userMessage\", message);\n        this.input.value = \"\";\n      }\n    });\n\n    // Listen for chatbot events and update the UI accordingly\n    this.eventBus.on(\"messageReceived\", ({ content, metadata }) => {\n      console.log(\"UI received messageReceived event:\", content, metadata);\n      this.addMessage(\"assistant\", content, metadata);\n    });\n\n    this.eventBus.on(\"typing\", ({ isTyping }) => {\n      if (isTyping) {\n        this.showTypingIndicator();\n      } else {\n        this.hideTypingIndicator();\n      }\n    });\n\n    this.eventBus.on(\"error\", ({ message }) => {\n      this.displayError(message);\n    });\n\n    this.eventBus.on(\"choicePresented\", ({ buttons }) => {\n      this.addButtons(buttons);\n    });\n\n    this.eventBus.on(\"carouselPresented\", ({ items }) => {\n      this.addCarousel(items);\n    });\n  }\n\n  /**\n   * Add a message to the chat using the message-component\n   * @public\n   * @param {string} sender - The sender of the message ('user' or 'assistant')\n   * @param {string} content - The message content\n   * @param {Object} metadata - Optional metadata for the message\n   */\n  addMessage(sender, content, metadata = null) {\n    console.log(\n      `addMessage called with sender=${sender}, content=${content}, metadata=`,\n      metadata\n    );\n\n    // Create a message-component instead of manually constructing HTML\n    const message = document.createElement(\"message-component\");\n    message.eventBus = this.eventBus;\n    message.setAttribute(\"sender\", sender);\n    message.setAttribute(\"content\", content);\n\n    if (metadata) {\n      message.setAttribute(\"metadata\", JSON.stringify(metadata));\n    }\n\n    this.messageContainer.appendChild(message);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Add interactive buttons to the chat using button-component\n   * @public\n   * @param {Array} buttons - Array of button data\n   */\n  addButtons(buttons) {\n    if (!Array.isArray(buttons)) {\n      console.error(\"Invalid buttons data:\", buttons);\n      return;\n    }\n\n    // Instead of manually creating HTML buttons, we use <button-component>\n    // for each button. The button-component handles its own styling and click event.\n    const buttonGroup = document.createElement(\"div\");\n    buttonGroup.className = \"button-group\";\n\n    buttons.forEach((buttonData) => {\n      const button = document.createElement(\"button-component\");\n      button.eventBus = this.eventBus;\n      button.setAttribute(\"label\", buttonData.name);\n      button.setAttribute(\"payload\", JSON.stringify(buttonData.request));\n      buttonGroup.appendChild(button);\n    });\n\n    this.messageContainer.appendChild(buttonGroup);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Add a carousel to the chat using carousel-component\n   * @public\n   * @param {Array} items - Array of carousel items\n   */\n  addCarousel(items) {\n    if (!Array.isArray(items)) {\n      console.error(\"Invalid carousel items:\", items);\n      return;\n    }\n\n    // Use <carousel-component> with a data-carousel attribute\n    const carousel = document.createElement(\"carousel-component\");\n    carousel.eventBus = this.eventBus;\n    carousel.setAttribute(\"data-carousel\", JSON.stringify({ cards: items }));\n    this.messageContainer.appendChild(carousel);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Show the typing indicator\n   * @public\n   */\n  showTypingIndicator() {\n    if (this.typingIndicator) {\n      this.typingIndicator.style.display = \"flex\";\n      this.scrollToBottom();\n    }\n  }\n\n  /**\n   * Hide the typing indicator\n   * @public\n   */\n  hideTypingIndicator() {\n    if (this.typingIndicator) {\n      this.typingIndicator.style.display = \"none\";\n    }\n  }\n\n  /**\n   * Display an error message\n   * @public\n   * @param {string} message - The error message to display\n   */\n  displayError(message) {\n    // For errors, we can still just create a div since it's simple text\n    const errorDiv = document.createElement(\"div\");\n    errorDiv.classList.add(\"error-message\");\n    errorDiv.textContent = message;\n    this.messageContainer.appendChild(errorDiv);\n    this.scrollToBottom();\n  }\n\n  /**\n   * Remove all interactive elements\n   * @public\n   */\n  removeInteractiveElements() {\n    // Remove all custom components and groups of interactive elements\n    const elements = this.messageContainer.querySelectorAll(\n      \"button-component, carousel-component, .button-group\"\n    );\n    elements.forEach((element) => element.remove());\n  }\n\n  /**\n   * Scroll the message container to the bottom\n   * @private\n   */\n  scrollToBottom() {\n    this.messageContainer.scrollTop = this.messageContainer.scrollHeight;\n  }\n\n  /**\n   * Clean up resources\n   * @public\n   */\n  destroy() {\n    this.eventBus.removeAllListeners();\n  }\n}\n\nexport default ChatbotUI;\n"],"names":["ChatbotUI","config","_a","messageContainers","forms","inputs","typingIndicators","missing","message","content","metadata","isTyping","buttons","items","sender","buttonGroup","buttonData","button","carousel","errorDiv","element"],"mappings":"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"}