{"version":3,"file":"chatbot-main.Dd8l-Y0_.js","sources":["../frontend/entrypoints/chatbot-main.js"],"sourcesContent":["// /assets/scripts/chatbot/chatbot-main.js\n\nimport ChatbotCore from \"../core/chatbot-core.js\";\nimport MainChatbotUI from \"../ui/chatbot-main-ui.js\";\nimport eventBus from \"../utils/event-bus.js\";\nimport { EVENTS } from \"../utils/event-constants.js\";\nimport { generateUserId } from \"../utils/user-id-generator.js\";\n\n/**\n * MainChatbot Class\n * Manages the Main Chatbot's interactions, conversation history, and UI updates.\n */\nclass MainChatbot {\n  constructor(core, ui) {\n    this.core = core;\n    this.ui = ui;\n    this.historyKey = \"mainChatbotHistory\";\n    this.launchKey = \"chatHasLaunched\";\n    this.isLaunched = this.hasLaunched();\n    this.setupEventListeners();\n  }\n\n  hasLaunched() {\n    return localStorage.getItem(this.launchKey) === \"true\";\n  }\n\n  setLaunched() {\n    localStorage.setItem(this.launchKey, \"true\");\n    this.isLaunched = true;\n  }\n\n  setupEventListeners() {\n    // Listen to messageReceived events\n    eventBus.on(EVENTS.MAIN_CHATBOT.MESSAGE_RECEIVED, (data) => {\n      this.ui.addMessage(\"assistant\", data.content, data.metadata);\n      this.saveToHistory(\"assistant\", data.content, data.metadata);\n    });\n\n    // Listen to user messages\n    eventBus.on(\"userMessage\", (message) => {\n      this.ui.addMessage(\"user\", message);\n      this.saveToHistory(\"user\", message);\n      this.core.sendMessage(message);\n    });\n\n    // Listen to button clicks\n    eventBus.on(\"buttonClicked\", (data) => {\n      // Display the button's label as the user's message\n      const buttonLabel = data.label || data.name || \"Button clicked\";\n      this.ui.addMessage(\"user\", buttonLabel);\n      this.saveToHistory(\"user\", buttonLabel);\n\n      // Send the original button payload to Voiceflow\n      delete data.label; // Remove our custom label before sending\n      this.core.sendAction(data);\n    });\n\n    // Listen to choicePresented events\n    eventBus.on(EVENTS.MAIN_CHATBOT.CHOICE_PRESENTED, (data) => {\n      this.ui.addButtons(data.buttons);\n    });\n\n    // Listen to carouselPresented events\n    eventBus.on(EVENTS.MAIN_CHATBOT.CAROUSEL_PRESENTED, (data) => {\n      this.ui.addCarousel(data.carouselItems);\n    });\n\n    // Listen to error events\n    eventBus.on(EVENTS.MAIN_CHATBOT.ERROR, (error) => {\n      this.ui.displayError(error.message);\n    });\n\n    // Listen to typing events\n    eventBus.on(EVENTS.MAIN_CHATBOT.TYPING, (data) => {\n      if (data.isTyping) {\n        this.ui.showTypingIndicator();\n      } else {\n        this.ui.hideTypingIndicator();\n      }\n    });\n\n    // Listen for chatbot launch event\n    document.addEventListener(\"chatbotLaunch\", () => {\n      this.launch();\n    });\n\n    // Listen for user message submissions via UI\n    this.ui.onUserMessage((message) => {\n      this.sendMessage(message);\n    });\n\n    // Listen for button clicks from UI components\n    this.ui.onButtonClick((payload) => {\n      this.sendAction(payload);\n    });\n  }\n\n  launch() {\n    if (this.isLaunched) {\n      console.log(\"Chat already launched, skipping launch request\");\n      return;\n    }\n\n    this.core\n      .sendLaunch()\n      .then(() => {\n        console.log(\"Chatbot launched successfully.\");\n        this.setLaunched();\n      })\n      .catch((error) => {\n        console.error(\"Error launching chatbot:\", error);\n        this.ui.displayError(\n          \"Failed to launch the chatbot. Please try again later.\"\n        );\n      });\n  }\n\n  sendMessage(message) {\n    const sanitizedMessage = this.sanitizeInput(message);\n\n    this.ui.addMessage(\"user\", sanitizedMessage, { type: \"message\" });\n    this.saveToHistory(\"user\", sanitizedMessage, { type: \"message\" });\n\n    this.core.sendMessage(sanitizedMessage).catch((error) => {\n      console.error(\"Error sending message:\", error);\n      this.ui.displayError(\"Failed to send your message. Please try again.\");\n    });\n  }\n\n  sendAction(actionPayload) {\n    if (!actionPayload || typeof actionPayload !== \"object\") {\n      console.error(\"Invalid action payload:\", actionPayload);\n      this.ui.displayError(\"Invalid action triggered.\");\n      return;\n    }\n\n    this.core\n      .sendAction({\n        action: actionPayload,\n        config: {},\n      })\n      .then(() => {\n        console.log(\"Action sent successfully:\", actionPayload);\n        this.ui.addMessage(\"user\", actionPayload.label || \"Action executed.\", {\n          type: \"action\",\n        });\n        this.saveToHistory(\"user\", JSON.stringify(actionPayload), {\n          type: \"action\",\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error sending action:\", error);\n        this.ui.displayError(\n          \"An error occurred while processing your request.\"\n        );\n      });\n  }\n\n  loadHistory() {\n    const history = JSON.parse(localStorage.getItem(this.historyKey)) || [];\n    history.forEach((entry) => {\n      if (entry.sender === \"user\") {\n        this.ui.addMessage(\"user\", entry.message, entry.metadata);\n      } else if (entry.sender === \"assistant\") {\n        this.ui.addMessage(\"assistant\", entry.message, entry.metadata);\n        // Re-render interactive elements if present\n        if (entry.metadata) {\n          switch (entry.metadata.type) {\n            case \"choice\":\n              this.ui.addButtons(entry.metadata.buttons);\n              break;\n            case \"carousel\":\n              this.ui.addCarousel(entry.metadata.carouselItems);\n              break;\n            // Add more cases as needed\n            default:\n              break;\n          }\n        }\n      }\n    });\n  }\n\n  saveToHistory(sender, message, metadata = null) {\n    const history = JSON.parse(localStorage.getItem(this.historyKey)) || [];\n    history.push({ sender, message, metadata });\n    localStorage.setItem(this.historyKey, JSON.stringify(history));\n  }\n\n  sanitizeInput(input) {\n    const div = document.createElement(\"div\");\n    div.textContent = input;\n    return div.innerHTML;\n  }\n}\n\n// Initialize Main Chatbot on DOMContentLoaded\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const mainChatbotContainer = document.getElementById(\"main-chatbot-ui\");\n\n  if (!mainChatbotContainer) {\n    console.error(\"Main Chatbot UI container not found\");\n    return;\n  }\n\n  // Generate or retrieve existing userID for Main Chatbot\n  let mainUserId = localStorage.getItem(\"mainChatbotUserId\");\n  if (!mainUserId) {\n    mainUserId = generateUserId(\"mainChatbot\");\n    localStorage.setItem(\"mainChatbotUserId\", mainUserId);\n  }\n\n  // Initialize ChatbotCore with the generated userID\n  const mainChatbotCore = new ChatbotCore({\n    userID: mainUserId,\n    endpoint:\n      \"https://chatbottings--development.gadget.app/voiceflowAPI/voiceflow-streaming\", // Update to your actual endpoint\n    chatbotType: \"main\",\n  });\n\n  // Initialize MainChatbotUI\n  const mainChatbotUI = new MainChatbotUI(mainChatbotContainer);\n\n  // Initialize MainChatbot\n  const mainChatbot = new MainChatbot(mainChatbotCore, mainChatbotUI);\n\n  // Load conversation history\n  mainChatbot.loadHistory();\n});\n\nexport default MainChatbot;\n"],"names":["MainChatbot","core","ui","eventBus","EVENTS","data","message","buttonLabel","error","payload","sanitizedMessage","actionPayload","entry","sender","metadata","history","input","div","mainChatbotContainer","mainUserId","generateUserId","mainChatbotCore","ChatbotCore","mainChatbotUI","MainChatbotUI"],"mappings":"2JAYA,MAAMA,CAAY,CAChB,YAAYC,EAAMC,EAAI,CACpB,KAAK,KAAOD,EACZ,KAAK,GAAKC,EACV,KAAK,WAAa,qBAClB,KAAK,UAAY,kBACjB,KAAK,WAAa,KAAK,cACvB,KAAK,oBAAmB,CACzB,CAED,aAAc,CACZ,OAAO,aAAa,QAAQ,KAAK,SAAS,IAAM,MACjD,CAED,aAAc,CACZ,aAAa,QAAQ,KAAK,UAAW,MAAM,EAC3C,KAAK,WAAa,EACnB,CAED,qBAAsB,CAEpBC,EAAS,GAAGC,EAAO,aAAa,iBAAmBC,GAAS,CAC1D,KAAK,GAAG,WAAW,YAAaA,EAAK,QAASA,EAAK,QAAQ,EAC3D,KAAK,cAAc,YAAaA,EAAK,QAASA,EAAK,QAAQ,CACjE,CAAK,EAGDF,EAAS,GAAG,cAAgBG,GAAY,CACtC,KAAK,GAAG,WAAW,OAAQA,CAAO,EAClC,KAAK,cAAc,OAAQA,CAAO,EAClC,KAAK,KAAK,YAAYA,CAAO,CACnC,CAAK,EAGDH,EAAS,GAAG,gBAAkBE,GAAS,CAErC,MAAME,EAAcF,EAAK,OAASA,EAAK,MAAQ,iBAC/C,KAAK,GAAG,WAAW,OAAQE,CAAW,EACtC,KAAK,cAAc,OAAQA,CAAW,EAGtC,OAAOF,EAAK,MACZ,KAAK,KAAK,WAAWA,CAAI,CAC/B,CAAK,EAGDF,EAAS,GAAGC,EAAO,aAAa,iBAAmBC,GAAS,CAC1D,KAAK,GAAG,WAAWA,EAAK,OAAO,CACrC,CAAK,EAGDF,EAAS,GAAGC,EAAO,aAAa,mBAAqBC,GAAS,CAC5D,KAAK,GAAG,YAAYA,EAAK,aAAa,CAC5C,CAAK,EAGDF,EAAS,GAAGC,EAAO,aAAa,MAAQI,GAAU,CAChD,KAAK,GAAG,aAAaA,EAAM,OAAO,CACxC,CAAK,EAGDL,EAAS,GAAGC,EAAO,aAAa,OAASC,GAAS,CAC5CA,EAAK,SACP,KAAK,GAAG,sBAER,KAAK,GAAG,qBAEhB,CAAK,EAGD,SAAS,iBAAiB,gBAAiB,IAAM,CAC/C,KAAK,OAAM,CACjB,CAAK,EAGD,KAAK,GAAG,cAAeC,GAAY,CACjC,KAAK,YAAYA,CAAO,CAC9B,CAAK,EAGD,KAAK,GAAG,cAAeG,GAAY,CACjC,KAAK,WAAWA,CAAO,CAC7B,CAAK,CACF,CAED,QAAS,CACP,GAAI,KAAK,WAAY,CACnB,QAAQ,IAAI,gDAAgD,EAC5D,MACD,CAED,KAAK,KACF,WAAY,EACZ,KAAK,IAAM,CACV,QAAQ,IAAI,gCAAgC,EAC5C,KAAK,YAAW,CACxB,CAAO,EACA,MAAOD,GAAU,CAChB,QAAQ,MAAM,2BAA4BA,CAAK,EAC/C,KAAK,GAAG,aACN,uDACV,CACA,CAAO,CACJ,CAED,YAAYF,EAAS,CACnB,MAAMI,EAAmB,KAAK,cAAcJ,CAAO,EAEnD,KAAK,GAAG,WAAW,OAAQI,EAAkB,CAAE,KAAM,SAAS,CAAE,EAChE,KAAK,cAAc,OAAQA,EAAkB,CAAE,KAAM,SAAS,CAAE,EAEhE,KAAK,KAAK,YAAYA,CAAgB,EAAE,MAAOF,GAAU,CACvD,QAAQ,MAAM,yBAA0BA,CAAK,EAC7C,KAAK,GAAG,aAAa,gDAAgD,CAC3E,CAAK,CACF,CAED,WAAWG,EAAe,CACxB,GAAI,CAACA,GAAiB,OAAOA,GAAkB,SAAU,CACvD,QAAQ,MAAM,0BAA2BA,CAAa,EACtD,KAAK,GAAG,aAAa,2BAA2B,EAChD,MACD,CAED,KAAK,KACF,WAAW,CACV,OAAQA,EACR,OAAQ,CAAE,CAClB,CAAO,EACA,KAAK,IAAM,CACV,QAAQ,IAAI,4BAA6BA,CAAa,EACtD,KAAK,GAAG,WAAW,OAAQA,EAAc,OAAS,mBAAoB,CACpE,KAAM,QAChB,CAAS,EACD,KAAK,cAAc,OAAQ,KAAK,UAAUA,CAAa,EAAG,CACxD,KAAM,QAChB,CAAS,CACT,CAAO,EACA,MAAOH,GAAU,CAChB,QAAQ,MAAM,wBAAyBA,CAAK,EAC5C,KAAK,GAAG,aACN,kDACV,CACA,CAAO,CACJ,CAED,aAAc,EACI,KAAK,MAAM,aAAa,QAAQ,KAAK,UAAU,CAAC,GAAK,IAC7D,QAASI,GAAU,CACzB,GAAIA,EAAM,SAAW,OACnB,KAAK,GAAG,WAAW,OAAQA,EAAM,QAASA,EAAM,QAAQ,UAC/CA,EAAM,SAAW,cAC1B,KAAK,GAAG,WAAW,YAAaA,EAAM,QAASA,EAAM,QAAQ,EAEzDA,EAAM,UACR,OAAQA,EAAM,SAAS,KAAI,CACzB,IAAK,SACH,KAAK,GAAG,WAAWA,EAAM,SAAS,OAAO,EACzC,MACF,IAAK,WACH,KAAK,GAAG,YAAYA,EAAM,SAAS,aAAa,EAChD,KAIH,CAGX,CAAK,CACF,CAED,cAAcC,EAAQP,EAASQ,EAAW,KAAM,CAC9C,MAAMC,EAAU,KAAK,MAAM,aAAa,QAAQ,KAAK,UAAU,CAAC,GAAK,GACrEA,EAAQ,KAAK,CAAE,OAAAF,EAAQ,QAAAP,EAAS,SAAAQ,CAAU,CAAA,EAC1C,aAAa,QAAQ,KAAK,WAAY,KAAK,UAAUC,CAAO,CAAC,CAC9D,CAED,cAAcC,EAAO,CACnB,MAAMC,EAAM,SAAS,cAAc,KAAK,EACxC,OAAAA,EAAI,YAAcD,EACXC,EAAI,SACZ,CACH,CAGA,SAAS,iBAAiB,mBAAoB,IAAM,CAClD,MAAMC,EAAuB,SAAS,eAAe,iBAAiB,EAEtE,GAAI,CAACA,EAAsB,CACzB,QAAQ,MAAM,qCAAqC,EACnD,MACD,CAGD,IAAIC,EAAa,aAAa,QAAQ,mBAAmB,EACpDA,IACHA,EAAaC,EAAe,aAAa,EACzC,aAAa,QAAQ,oBAAqBD,CAAU,GAItD,MAAME,EAAkB,IAAIC,EAAY,CACtC,OAAQH,EACR,SACE,gFACF,YAAa,MACjB,CAAG,EAGKI,EAAgB,IAAIC,EAAcN,CAAoB,EAGxC,IAAIlB,EAAYqB,EAAiBE,CAAa,EAGtD,YAAW,CACzB,CAAC"}